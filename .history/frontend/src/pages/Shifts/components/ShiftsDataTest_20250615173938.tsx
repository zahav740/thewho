/**
 * @file: ShiftsDataTest.tsx
 * @description: –¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Å–º–µ–Ω
 * @dependencies: antd, react-query, shiftsApi
 * @created: 2025-06-15
 */
import React from 'react';
import { Card, Button, Spin, Typography, Space, Table, Tag, message } from 'antd';
import { ReloadOutlined, BugOutlined, CheckCircleOutlined } from '@ant-design/icons';
import { useQuery } from '@tanstack/react-query';
import { shiftsApi } from '../../../services/shiftsApi';
import dayjs from 'dayjs';

const { Text, Title } = Typography;

export const ShiftsDataTest: React.FC = () => {
  const { data: shiftsData, isLoading, error, refetch } = useQuery({
    queryKey: ['shifts', 'test', dayjs().format('YYYY-MM-DD')],
    queryFn: async () => {
      console.log('üß™ –¢–ï–°–¢: –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–º–µ–Ω –∑–∞ —Å–µ–≥–æ–¥–Ω—è');
      
      const shifts = await shiftsApi.getAll({
        startDate: dayjs().format('YYYY-MM-DD'),
        endDate: dayjs().format('YYYY-MM-DD'),
      });
      
      console.log('üß™ –¢–ï–°–¢: –ü–æ–ª—É—á–µ–Ω—ã —Å–º–µ–Ω—ã:', shifts);
      console.log('üß™ –¢–ï–°–¢: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–º–µ–Ω:', shifts.length);
      
      // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Å—Ç–∞–Ω–∫–∞–º
      const machineGroups = shifts.reduce((acc, shift) => {
        const machineId = shift.machineId;
        if (machineId !== undefined && machineId !== null) {
          if (!acc[machineId]) {
            acc[machineId] = [];
          }
          acc[machineId].push(shift);
        }
        return acc;
      }, {} as Record<number, any[]>);
      
      console.log('üß™ –¢–ï–°–¢: –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ —Å—Ç–∞–Ω–∫–∞–º:', machineGroups);
      
      return {
        rawShifts: shifts,
        machineGroups,
        summary: {
          totalShifts: shifts.length,
          machinesWithShifts: Object.keys(machineGroups).length,
          totalDayProduction: shifts.reduce((sum, s) => sum + (s.dayShiftQuantity || 0), 0),
          totalNightProduction: shifts.reduce((sum, s) => sum + (s.nightShiftQuantity || 0), 0),
        }
      };
    },
    refetchInterval: 10000, // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥ –¥–ª—è —Ç–µ—Å—Ç–∞
  });

  const columns = [
    {
      title: 'ID',
      dataIndex: 'id',
      key: 'id',
      width: 60,
    },
    {
      title: '–°—Ç–∞–Ω–æ–∫',
      dataIndex: 'machineId',
      key: 'machineId',
      width: 80,
      render: (machineId: number) => <Tag color="blue">{machineId}</Tag>,
    },
    {
      title: '–ß–µ—Ä—Ç–µ–∂',
      key: 'drawing',
      render: (record: any) => {
        const drawing = record.drawingNumber || record.orderDrawingNumber || '–ù–µ—Ç';
        return <Text code style={{ fontSize: '11px' }}>{drawing}</Text>;
      },
    },
    {
      title: '–î–µ–Ω—å',
      children: [
        {
          title: '–ö–æ–ª-–≤–æ',
          dataIndex: 'dayShiftQuantity',
          key: 'dayQty',
          width: 60,
          render: (qty: number) => qty || 0,
        },
        {
          title: '–û–ø–µ—Ä–∞—Ç–æ—Ä',
          dataIndex: 'dayShiftOperator',
          key: 'dayOp',
          width: 100,
          render: (op: string) => op || '-',
        },
      ],
    },
    {
      title: '–ù–æ—á—å',
      children: [
        {
          title: '–ö–æ–ª-–≤–æ',
          dataIndex: 'nightShiftQuantity',
          key: 'nightQty',
          width: 60,
          render: (qty: number) => qty || 0,
        },
        {
          title: '–û–ø–µ—Ä–∞—Ç–æ—Ä',
          dataIndex: 'nightShiftOperator',
          key: 'nightOp',
          width: 100,
          render: (op: string) => op || '-',
        },
      ],
    },
    {
      title: '–î–∞—Ç–∞',
      dataIndex: 'date',
      key: 'date',
      width: 100,
      render: (date: string) => dayjs(date).format('DD.MM'),
    },
  ];

  const handleTestSpecificMachine = (machineId: number) => {
    console.log(`üéØ –¢–ï–°–¢: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞–Ω–æ–∫ ${machineId}`);
    
    const machineShifts = shiftsData?.rawShifts.filter(s => s.machineId === machineId) || [];
    
    console.log(`üìä –°—Ç–∞–Ω–æ–∫ ${machineId}:`, {
      totalShifts: machineShifts.length,
      dayProduction: machineShifts.reduce((sum, s) => sum + (s.dayShiftQuantity || 0), 0),
      nightProduction: machineShifts.reduce((sum, s) => sum + (s.nightShiftQuantity || 0), 0),
      shifts: machineShifts
    });
    
    message.info(`–°—Ç–∞–Ω–æ–∫ ${machineId}: ${machineShifts.length} —Å–º–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –¥–µ—Ç–∞–ª–µ–π.`);
  };

  if (isLoading) {
    return (
      <Card title="üß™ –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Å–º–µ–Ω" style={{ margin: '16px 0' }}>
        <div style={{ textAlign: 'center', padding: '40px' }}>
          <Spin size="large" />
          <div style={{ marginTop: '16px' }}>
            <Text>–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–º–µ–Ω...</Text>
          </div>
        </div>
      </Card>
    );
  }

  if (error) {
    return (
      <Card title="üß™ –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Å–º–µ–Ω" style={{ margin: '16px 0' }}>
        <div style={{ textAlign: 'center', padding: '40px' }}>
          <Text type="danger">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {(error as Error).message}</Text>
          <br />
          <Button 
            type="primary" 
            icon={<ReloadOutlined />} 
            onClick={() => refetch()}
            style={{ marginTop: '16px' }}
          >
            –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É
          </Button>
        </div>
      </Card>
    );
  }

  return (
    <Card 
      title="üß™ –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Å–º–µ–Ω" 
      style={{ margin: '16px 0' }}
      extra={
        <Space>
          <Button 
            icon={<ReloadOutlined />} 
            onClick={() => refetch()}
            size="small"
          >
            –û–±–Ω–æ–≤–∏—Ç—å
          </Button>
          <Tag color="green">
            –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: 10—Å–µ–∫
          </Tag>
        </Space>
      }
    >
      {/* –°–≤–æ–¥–∫–∞ */}
      <div style={{ marginBottom: '24px' }}>
        <Title level={5}>üìä –°–≤–æ–¥–∫–∞ –¥–∞–Ω–Ω—ã—Ö</Title>
        <Space wrap>
          <Tag color="blue" style={{ padding: '4px 8px' }}>
            üìÖ –î–∞—Ç–∞: {dayjs().format('DD.MM.YYYY')}
          </Tag>
          <Tag color="green" style={{ padding: '4px 8px' }}>
            üìã –í—Å–µ–≥–æ —Å–º–µ–Ω: {shiftsData?.summary.totalShifts || 0}
          </Tag>
          <Tag color="orange" style={{ padding: '4px 8px' }}>
            üè≠ –°—Ç–∞–Ω–∫–æ–≤: {shiftsData?.summary.machinesWithShifts || 0}
          </Tag>
          <Tag color="cyan" style={{ padding: '4px 8px' }}>
            ‚òÄÔ∏è –î–µ–Ω—å: {shiftsData?.summary.totalDayProduction || 0} –¥–µ—Ç.
          </Tag>
          <Tag color="purple" style={{ padding: '4px 8px' }}>
            üåô –ù–æ—á—å: {shiftsData?.summary.totalNightProduction || 0} –¥–µ—Ç.
          </Tag>
          <Tag color="red" style={{ padding: '4px 8px' }}>
            üìä –û–±—â–∏–π –æ–±—ä–µ–º: {(shiftsData?.summary.totalDayProduction || 0) + (shiftsData?.summary.totalNightProduction || 0)} –¥–µ—Ç.
          </Tag>
        </Space>
      </div>

      {/* –ö–Ω–æ–ø–∫–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ —Å—Ç–∞–Ω–∫–∞–º */}
      {shiftsData?.machineGroups && Object.keys(shiftsData.machineGroups).length > 0 && (
        <div style={{ marginBottom: '24px' }}>
          <Title level={5}>üéØ –¢–µ—Å—Ç –ø–æ —Å—Ç–∞–Ω–∫–∞–º</Title>
          <Space wrap>
            {Object.keys(shiftsData.machineGroups).map(machineId => (
              <Button
                key={machineId}
                size="small"
                icon={<BugOutlined />}
                onClick={() => handleTestSpecificMachine(parseInt(machineId))}
                style={{ marginBottom: '4px' }}
              >
                –°—Ç–∞–Ω–æ–∫ {machineId} ({shiftsData.machineGroups[parseInt(machineId)].length})
              </Button>
            ))}
          </Space>
        </div>
      )}

      {/* –¢–∞–±–ª–∏—Ü–∞ –¥–∞–Ω–Ω—ã—Ö */}
      <div>
        <Title level={5}>üìã –î–∞–Ω–Ω—ã–µ —Å–º–µ–Ω</Title>
        {shiftsData?.rawShifts.length === 0 ? (
          <div style={{ textAlign: 'center', padding: '40px' }}>
            <Text type="secondary">
              ‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö —Å–º–µ–Ω –∑–∞ —Å–µ–≥–æ–¥–Ω—è ({dayjs().format('DD.MM.YYYY')})
            </Text>
            <br />
            <Text type="secondary" style={{ fontSize: '12px' }}>
              –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –µ—Å—Ç—å –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ shifts –¥–ª—è —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã
            </Text>
          </div>
        ) : (
          <Table
            columns={columns}
            dataSource={shiftsData?.rawShifts || []}
            rowKey="id"
            size="small"
            scroll={{ x: 700 }}
            pagination={{
              pageSize: 10,
              showSizeChanger: true,
              showQuickJumper: true,
              showTotal: (total) => `–í—Å–µ–≥–æ ${total} –∑–∞–ø–∏—Å–µ–π`,
            }}
          />
        )}
      </div>

      {/* –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <div style={{ 
        marginTop: '24px', 
        padding: '12px', 
        backgroundColor: '#f0f9ff', 
        borderRadius: '6px',
        fontSize: '12px'
      }}>
        <Title level={5} style={{ fontSize: '14px', margin: 0, marginBottom: '8px' }}>
          üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
        </Title>
        <div>
          <Text strong>API Endpoint:</Text> GET /shifts
        </div>
        <div>
          <Text strong>–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:</Text> startDate={dayjs().format('YYYY-MM-DD')}, endDate={dayjs().format('YYYY-MM-DD')}
        </div>
        <div>
          <Text strong>–°—Ç–∞—Ç—É—Å:</Text> {error ? '‚ùå –û—à–∏–±–∫–∞' : '‚úÖ OK'}
        </div>
        <div>
          <Text strong>–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:</Text> {dayjs().format('HH:mm:ss')}
        </div>
        <div style={{ marginTop: '8px', color: '#666' }}>
          üí° –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12) –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –ª–æ–≥–æ–≤ –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö
        </div>
      </div>
    </Card>
  );
};

export default ShiftsDataTest;