/**
 * @file: app.module.ts
 * @description: –ö–æ—Ä–Ω–µ–≤–æ–π –º–æ–¥—É–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * @dependencies: –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏
 * @created: 2025-01-28
 * @updated: 2025-05-31 // –î–æ–±–∞–≤–ª–µ–Ω OrdersDataMiddleware –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏ 400
 */
import { Module, MiddlewareConsumer, NestModule } from '@nestjs/common';
import { ConfigModule } from '@nestjs/config';
import { TypeOrmModule } from '@nestjs/typeorm';
import { MulterModule } from '@nestjs/platform-express';
import { APP_GUARD } from '@nestjs/core';
import { Reflector } from '@nestjs/core';
import { MachinesModule } from './modules/machines/machines.module';
import { OrdersModule } from './modules/orders/orders.module';
import { OperationsModule } from './modules/operations/operations.module';
import { OperatorsModule } from './modules/operators/operators.module';
import { ShiftsModule } from './modules/shifts/shifts.module';
import { CalendarModule } from './modules/calendar/calendar.module';
import { FilesModule } from './modules/files/files.module';
import { HealthModule } from './modules/health/health.module';
import { PlanningModule } from './modules/planning/planning.module';
import { TestModule } from './modules/test/test.module';
import { PetsModule } from './modules/pets/pets.module';
import { TranslationsModule } from './modules/translations/translations.module';
import { OperationAnalyticsModule } from './modules/operation-analytics/operation-analytics.module';
import { SynchronizationModule } from './modules/synchronization/synchronization.module';
import { AuthModule } from './modules/auth/auth.module';
import { JwtAuthGuard } from './modules/auth/guards/jwt-auth.guard';
import { HeaderSizeMiddleware } from './common/middleware/header-size.middleware';
import { OrdersDataMiddleware } from './modules/orders/orders.middleware';

@Module({
  imports: [
    ConfigModule.forRoot({
      isGlobal: true,
    }),
    MulterModule.register({
      // –ì–ª–æ–±–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Multer –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–æ–≤
      // –ù–ï —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª—ã –Ω–∞ –¥–∏—Å–∫ - —Ä–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Å buffer –≤ –ø–∞–º—è—Ç–∏
      limits: {
        fileSize: 100 * 1024 * 1024, // 100MB –º–∞–∫—Å–∏–º—É–º
        files: 10, // –º–∞–∫—Å–∏–º—É–º 10 —Ñ–∞–π–ª–æ–≤ –∑–∞ —Ä–∞–∑
      },
    }),
    TypeOrmModule.forRoot({
      type: 'postgres',
      host: process.env.DB_HOST || 'localhost',
      port: parseInt(process.env.DB_PORT, 10) || 5432,
      username: process.env.DB_USERNAME || 'postgres',
      password: process.env.DB_PASSWORD || 'magarel',
      database: process.env.DB_NAME || 'thewho',
      entities: [__dirname + '/database/entities/*.entity{.ts,.js}', __dirname + '/modules/*/entities/*.entity{.ts,.js}'],
      synchronize: false, // –û—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é, –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
      logging: process.env.NODE_ENV === 'development',
      // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –ë–î
      autoLoadEntities: true,
      retryAttempts: 3,
      retryDelay: 3000,
    }),
    MachinesModule,
    OrdersModule,
    OperationsModule,
    OperatorsModule,
    ShiftsModule,
    CalendarModule,
    FilesModule,
    PlanningModule,
    HealthModule,
    TestModule,
    PetsModule,
    TranslationsModule, // –ú–æ–¥—É–ª—å –ø–µ—Ä–µ–≤–æ–¥–æ–≤
    OperationAnalyticsModule, // –ú–æ–¥—É–ª—å –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –æ–ø–µ—Ä–∞—Ü–∏–π
    SynchronizationModule, // üÜï –ú–æ–¥—É–ª—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ Production ‚Üî Shifts
    AuthModule, // üÜï –ú–æ–¥—É–ª—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  ],
  providers: [
    // –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π guard
    // Reflector,
    // {
    //   provide: APP_GUARD,
    //   useClass: JwtAuthGuard,
    // },
  ],
})
export class AppModule implements NestModule {
  configure(consumer: MiddlewareConsumer) {
    consumer
      .apply(HeaderSizeMiddleware)
      .forRoutes('*');
      
    // –ü—Ä–∏–º–µ–Ω—è–µ–º OrdersDataMiddleware —Ç–æ–ª—å–∫–æ –∫ –º–∞—Ä—à—Ä—É—Ç–∞–º –∑–∞–∫–∞–∑–æ–≤
    consumer
      .apply(OrdersDataMiddleware)
      .forRoutes('/api/orders', '/api/orders/:id');
  }
}
