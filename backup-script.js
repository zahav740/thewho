// ===============================================
// –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –†–ï–ó–ï–†–í–ù–û–ï –ö–û–ü–ò–†–û–í–ê–ù–ò–ï –î–ê–ù–ù–´–•
// ===============================================
// –í—ã–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞
// –ü–ï–†–ï–î –æ—á–∏—Å—Ç–∫–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
// ===============================================

console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö TheWho...');

async function createBackup() {
  try {
    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    const { loadFromSupabase, supabase } = await import('./src/utils/supabaseClient.js');
    
    console.log('üìä –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–∞–Ω–Ω—ã—Ö...');
    
    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const stats = {};
    
    try {
      const { data: ordersCount } = await supabase.from('orders').select('*', { count: 'exact', head: true });
      stats.orders = ordersCount?.length || 0;
    } catch (e) {
      stats.orders = 0;
    }
    
    try {
      const { data: operationsCount } = await supabase.from('operations').select('*', { count: 'exact', head: true });
      stats.operations = operationsCount?.length || 0;
    } catch (e) {
      stats.operations = 0;
    }
    
    try {
      const { data: planningCount } = await supabase.from('planning_results').select('*', { count: 'exact', head: true });
      stats.planning_results = planningCount?.length || 0;
    } catch (e) {
      try {
        const { data: oldPlanningCount } = await supabase.from('planning_result').select('*', { count: 'exact', head: true });
        stats.planning_result = oldPlanningCount?.length || 0;
      } catch (e2) {
        stats.planning_result = 0;
      }
    }
    
    try {
      const { data: shiftsCount } = await supabase.from('shifts').select('*', { count: 'exact', head: true });
      stats.shifts = shiftsCount?.length || 0;
    } catch (e) {
      stats.shifts = 0;
    }
    
    console.log('üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö:', stats);
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
    console.log('‚¨áÔ∏è –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Supabase...');
    const backupData = await loadFromSupabase();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    const fullBackup = {
      metadata: {
        timestamp: new Date().toISOString(),
        version: '2.0',
        source: 'TheWho Production Planning',
        statistics: stats,
        description: '–ü–æ–ª–Ω–æ–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ –º–∏–≥—Ä–∞—Ü–∏–µ–π –∫ –Ω–æ–≤–æ–π —Å—Ö–µ–º–µ –ë–î'
      },
      data: backupData
    };
    
    // –°–æ–∑–¥–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ —Å –¥–∞—Ç–æ–π
    const date = new Date().toISOString().split('T')[0];
    const time = new Date().toISOString().split('T')[1].split('.')[0].replace(/:/g, '-');
    const filename = `theWho-backup-${date}-${time}.json`;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    console.log('üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é...');
    const blob = new Blob([JSON.stringify(fullBackup, null, 2)], { 
      type: 'application/json' 
    });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = filename;
    a.style.display = 'none';
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
    
    console.log(`‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –∫–∞–∫: ${filename}`);
    console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:');
    console.log(`   üì¶ –ó–∞–∫–∞–∑–æ–≤: ${backupData.data?.orders?.length || 0}`);
    console.log(`   ‚öôÔ∏è –û–ø–µ—Ä–∞—Ü–∏–π: ${backupData.data?.orders?.reduce((sum, order) => sum + (order.operations?.length || 0), 0) || 0}`);
    console.log(`   üìÖ –ó–∞–ø–∏—Å–µ–π –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: ${backupData.data?.planningResults?.length || 0}`);
    
    // –¢–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –∫–∞–∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∑–∞—â–∏—Ç—É
    localStorage.setItem('theWho-backup-' + date, JSON.stringify(fullBackup));
    console.log('üíø –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∫–æ–ø–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ localStorage');
    
    return fullBackup;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏:', error);
    
    // –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –∫–æ–ø–∏—é
    console.log('üîÑ –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –∫–æ–ø–∏–∏...');
    try {
      const simpleBackup = {
        orders: JSON.parse(localStorage.getItem('orders') || '[]'),
        planningResults: JSON.parse(localStorage.getItem('planningResults') || '[]'),
        timestamp: new Date().toISOString(),
        source: 'localStorage'
      };
      
      const blob = new Blob([JSON.stringify(simpleBackup, null, 2)], { 
        type: 'application/json' 
      });
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = `theWho-localStorage-backup-${new Date().toISOString().split('T')[0]}.json`;
      a.click();
      
      console.log('‚úÖ –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –∫–æ–ø–∏—è –∏–∑ localStorage —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞');
      
    } catch (localError) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–∞–∂–µ —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –∫–æ–ø–∏—é:', localError);
    }
    
    throw error;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
async function restoreFromBackup(backupData) {
  try {
    console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...');
    
    const { syncWithSupabase } = await import('./src/utils/supabaseClient.js');
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö
    let orders, planningResults;
    
    if (backupData.data) {
      // –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏
      orders = backupData.data.orders || [];
      planningResults = backupData.data.planningResults || [];
    } else {
      // –°—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç
      orders = backupData.orders || [];
      planningResults = backupData.planningResults || [];
    }
    
    console.log(`üìä –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º ${orders.length} –∑–∞–∫–∞–∑–æ–≤ –∏ ${planningResults.length} –∑–∞–ø–∏—Å–µ–π –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è...`);
    
    const result = await syncWithSupabase(orders, planningResults);
    
    if (result.success) {
      console.log('‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
      console.log(`üì¶ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: ${result.ordersCount}`);
      console.log(`‚öôÔ∏è –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –æ–ø–µ—Ä–∞—Ü–∏–π: ${result.operationsCount}`);
      console.log(`üìÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: ${result.planningCount}`);
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:', result.error);
    }
    
    return result;
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:', error);
    throw error;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
function loadBackupFile() {
  const input = document.createElement('input');
  input.type = 'file';
  input.accept = '.json';
  input.onchange = async (e) => {
    try {
      const file = e.target.files[0];
      if (!file) return;
      
      console.log(`üìÇ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª: ${file.name}`);
      const text = await file.text();
      const backupData = JSON.parse(text);
      
      console.log('üìä –î–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞:', {
        timestamp: backupData.metadata?.timestamp || backupData.timestamp,
        orders: backupData.data?.orders?.length || backupData.orders?.length,
        planning: backupData.data?.planningResults?.length || backupData.planningResults?.length
      });
      
      const confirmed = confirm(
        `–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞ ${file.name}?\n\n` +
        `–ó–∞–∫–∞–∑–æ–≤: ${backupData.data?.orders?.length || backupData.orders?.length || 0}\n` +
        `–ó–∞–ø–∏—Å–µ–π –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: ${backupData.data?.planningResults?.length || backupData.planningResults?.length || 0}\n\n` +
        `–í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ –ø–µ—Ä–µ–∑–∞–ø–∏—à–µ—Ç —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ!`
      );
      
      if (confirmed) {
        await restoreFromBackup(backupData);
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:', error);
      alert('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: ' + error.message);
    }
  };
  input.click();
}

// –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
console.log(`
üîß –î–û–°–¢–£–ü–ù–´–ï –ö–û–ú–ê–ù–î–´:

1. createBackup() - –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
2. loadBackupFile() - –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏  
3. restoreFromBackup(data) - –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ –¥–∞–Ω–Ω—ã—Ö

üìù –ü–†–ò–ú–ï–† –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø:

// –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
await createBackup();

// –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ —Ñ–∞–π–ª–∞
loadBackupFile();

// –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –¥–∞–Ω–Ω—ã—Ö –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
const backup = {...}; // –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ
await restoreFromBackup(backup);
`);

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
if (confirm('–°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –¥–∞–Ω–Ω—ã—Ö —Å–µ–π—á–∞—Å?')) {
  createBackup().catch(console.error);
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å
window.createBackup = createBackup;
window.restoreFromBackup = restoreFromBackup;
window.loadBackupFile = loadBackupFile;
