/**
 * @file: check-backend-status.js
 * @description: –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ backend
 * @created: 2025-06-21
 */

const http = require('http');

function checkBackend() {
  const options = {
    hostname: 'localhost',
    port: 5100,
    path: '/api/health',
    method: 'GET',
    timeout: 3000
  };

  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ backend –Ω–∞ localhost:5100...\n');

  const req = http.request(options, (res) => {
    console.log(`‚úÖ Backend –¥–æ—Å—Ç—É–ø–µ–Ω! Status: ${res.statusCode}`);
    console.log('üéØ –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å PDF:\n');
    console.log('   - –ü—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞: http://localhost:5100/api/orders/pdf/1750497060623-385439311.pdf');
    console.log('   - Debug endpoint: http://localhost:5100/api/orders/debug/pdf/1750497060623-385439311.pdf');
    console.log('   - Frontend: http://localhost:3000\n');
  });

  req.on('error', (error) => {
    console.log('‚ùå Backend –ù–ï –î–û–°–¢–£–ü–ï–ù!');
    console.log(`   –û—à–∏–±–∫–∞: ${error.message}\n`);
    console.log('üí° –†–ï–®–ï–ù–ò–ï: –ó–∞–ø—É—Å—Ç–∏—Ç–µ backend:');
    console.log('   cd backend');
    console.log('   npm run start\n');
    console.log('   –ò–ª–∏:');
    console.log('   npm run dev\n');
  });

  req.on('timeout', () => {
    console.log('‚ùå –¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ backend');
    req.destroy();
  });

  req.end();
}

checkBackend();
