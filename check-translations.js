// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤
const fs = require('fs');
const path = require('path');

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤...');

// –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –ø–µ—Ä–µ–≤–æ–¥–æ–≤
const translationsPath = path.join(__dirname, 'frontend', 'src', 'i18n', 'translations.ts');
const translationsContent = fs.readFileSync(translationsPath, 'utf8');

console.log('‚úÖ –§–∞–π–ª –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –Ω–∞–π–¥–µ–Ω');

// –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–ª—é—á–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –¥–ª—è –º–∞—à–∏–Ω
const machineKeys = translationsContent.match(/'machine\.[^']+'/g) || [];
const planningKeys = translationsContent.match(/'planning\.[^']+'/g) || [];
const productionKeys = translationsContent.match(/'production\.[^']+'/g) || [];
const ordersKeys = translationsContent.match(/'orders\.[^']+'/g) || [];

console.log('\nüìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∫–ª—é—á–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤:');
console.log('üîß –ú–∞—à–∏–Ω—ã:', machineKeys.length, '–∫–ª—é—á–µ–π');
machineKeys.forEach(key => console.log('  -', key));

console.log('\nüìä –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ:', planningKeys.length, '–∫–ª—é—á–µ–π');  
planningKeys.forEach(key => console.log('  -', key));

console.log('\nüè≠ –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ:', productionKeys.length, '–∫–ª—é—á–µ–π');
productionKeys.forEach(key => console.log('  -', key));

console.log('\nüì¶ –ó–∞–∫–∞–∑—ã:', ordersKeys.length, '–∫–ª—é—á–µ–π');
ordersKeys.forEach(key => console.log('  -', key));

console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –í—Å–µ–≥–æ –∫–ª—é—á–µ–π:', 
  machineKeys.length + planningKeys.length + productionKeys.length + ordersKeys.length);
