@echo off
echo ===================================
echo –°–æ–∑–¥–∞–Ω–∏–µ –ª–µ–≥–∫–æ–≥–æ Frontend –∞—Ä—Ö–∏–≤–∞
echo ===================================

rem –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∞—Ä—Ö–∏–≤
if exist "frontend-beget-light.zip" del "frontend-beget-light.zip"

echo –°–æ–∑–¥–∞–Ω–∏–µ frontend-beget-light.zip –ë–ï–ó node_modules...

rem –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é frontend
cd frontend

rem –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
if exist temp_frontend rmdir /s /q temp_frontend
mkdir temp_frontend

echo –ö–æ–ø–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã...

rem –ö–æ–ø–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
copy package.json temp_frontend\
copy package-lock.json temp_frontend\
copy tsconfig.json temp_frontend\
if exist .env copy .env temp_frontend\

rem –ö–æ–ø–∏—Ä—É–µ–º –ø–∞–ø–∫–∏ src –∏ public
xcopy /E /I src temp_frontend\src
xcopy /E /I public temp_frontend\public

rem –ï—Å–ª–∏ –µ—Å—Ç—å –≥–æ—Ç–æ–≤–∞—è —Å–±–æ—Ä–∫–∞ build, —Ç–æ–∂–µ –∫–æ–ø–∏—Ä—É–µ–º
if exist build xcopy /E /I build temp_frontend\build

rem –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ –∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–∞–ø–∫–∏
cd temp_frontend
powershell -Command "Compress-Archive -Path '.\*' -DestinationPath '..\..\frontend-beget-light.zip' -Force"
cd ..

rem –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
rmdir /s /q temp_frontend

cd ..

echo.
echo ‚úÖ –õ–µ–≥–∫–∏–π –∞—Ä—Ö–∏–≤ frontend-beget-light.zip —Å–æ–∑–¥–∞–Ω!

rem –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä
for %%F in (frontend-beget-light.zip) do echo –†–∞–∑–º–µ—Ä: %%~zF bytes (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞–º–Ω–æ–≥–æ –º–µ–Ω—å—à–µ)

echo.
echo üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ:
powershell -Command "Add-Type -AssemblyName System.IO.Compression.FileSystem; $zip = [System.IO.Compression.ZipFile]::OpenRead('frontend-beget-light.zip'); Write-Host '–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã:'; $zip.Entries | Where-Object {$_.Name -match '\.(json|js|ts|tsx)$' -or $_.Name -eq 'package.json'} | Select-Object Name | ForEach-Object { Write-Host $_.Name }; $hasPackageJson = $zip.Entries | Where-Object {$_.Name -eq 'package.json'}; if($hasPackageJson) { Write-Host '‚úÖ package.json –Ω–∞–π–¥–µ–Ω' -ForegroundColor Green } else { Write-Host '‚ùå package.json –ù–ï –Ω–∞–π–¥–µ–Ω' -ForegroundColor Red }; $zip.Dispose()"

echo.
echo üìã –ß—Ç–æ –≤–∫–ª—é—á–µ–Ω–æ –≤ –∞—Ä—Ö–∏–≤:
echo ‚úÖ package.json –∏ package-lock.json
echo ‚úÖ tsconfig.json
echo ‚úÖ –ü–∞–ø–∫–∞ src/ (–∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥)
echo ‚úÖ –ü–∞–ø–∫–∞ public/ (—Å—Ç–∞—Ç–∏–∫–∞)
echo ‚úÖ –ü–∞–ø–∫–∞ build/ (–µ—Å–ª–∏ –µ—Å—Ç—å)
echo ‚ùå node_modules/ (–ò–°–ö–õ–Æ–ß–ï–ù–ê - —ç–∫–æ–Ω–æ–º–∏—Ç –≤—Ä–µ–º—è –∏ –º–µ—Å—Ç–æ)
echo.
echo üìã –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å npm install
echo.
pause