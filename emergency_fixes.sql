-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π
CREATE OR REPLACE FUNCTION create_operations_for_order(order_id INTEGER)
RETURNS TEXT AS $$
DECLARE
  order_record RECORD;
  work_type VARCHAR(50);
  result_text TEXT := '';
BEGIN
  -- –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞
  SELECT * INTO order_record FROM orders WHERE id = order_id;
  
  IF NOT FOUND THEN
    RETURN '–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω';
  END IF;
  
  -- –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ä–∞–±–æ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —á–µ—Ä—Ç–µ–∂–∞ –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –¥–∞–Ω–Ω—ã—Ö
  work_type := COALESCE(order_record."workType", 'MIXED');
  
  -- –°–æ–∑–¥–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
  IF work_type = 'TURNING' THEN
    -- –¢–æ–ª—å–∫–æ —Ç–æ–∫–∞—Ä–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
    INSERT INTO operations ("orderId", "operationNumber", operationtype, "estimatedTime", status, "createdAt", "updatedAt")
    VALUES 
      (order_id, 1, 'TURNING', 60, 'PENDING', NOW(), NOW()),
      (order_id, 2, 'TURNING', 45, 'PENDING', NOW(), NOW());
    result_text := '–°–æ–∑–¥–∞–Ω—ã —Ç–æ–∫–∞—Ä–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏';
    
  ELSIF work_type = 'MILLING' THEN
    -- –¢–æ–ª—å–∫–æ —Ñ—Ä–µ–∑–µ—Ä–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏  
    INSERT INTO operations ("orderId", "operationNumber", operationtype, "estimatedTime", status, "createdAt", "updatedAt")
    VALUES 
      (order_id, 1, 'MILLING', 90, 'PENDING', NOW(), NOW()),
      (order_id, 2, 'MILLING', 60, 'PENDING', NOW(), NOW());
    result_text := '–°–æ–∑–¥–∞–Ω—ã —Ñ—Ä–µ–∑–µ—Ä–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏';
    
  ELSE
    -- –°–º–µ—à–∞–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
    INSERT INTO operations ("orderId", "operationNumber", operationtype, "estimatedTime", status, "createdAt", "updatedAt")
    VALUES 
      (order_id, 1, 'MILLING', 75, 'PENDING', NOW(), NOW()),
      (order_id, 2, 'TURNING', 60, 'PENDING', NOW(), NOW()),
      (order_id, 3, 'MILLING', 45, 'PENDING', NOW(), NOW());
    result_text := '–°–æ–∑–¥–∞–Ω—ã —Å–º–µ—à–∞–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏';
  END IF;
  
  RETURN result_text;
END;
$$ LANGUAGE plpgsql;

-- –°–æ–∑–¥–∞–µ–º –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤ –±–µ–∑ –æ–ø–µ—Ä–∞—Ü–∏–π
DO $$
DECLARE
  order_without_ops RECORD;
  operations_created INTEGER := 0;
BEGIN
  FOR order_without_ops IN 
    SELECT o.id, o.drawing_number 
    FROM orders o
    LEFT JOIN operations op ON o.id = op."orderId"
    WHERE op.id IS NULL
    ORDER BY o.priority, o.id
  LOOP
    PERFORM create_operations_for_order(order_without_ops.id);
    operations_created := operations_created + 1;
    
    -- –õ–æ–≥–≥–∏—Ä—É–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 10 –∑–∞–∫–∞–∑–æ–≤
    IF operations_created % 10 = 0 THEN
      RAISE NOTICE '–°–æ–∑–¥–∞–Ω–æ –æ–ø–µ—Ä–∞—Ü–∏–π –¥–ª—è % –∑–∞–∫–∞–∑–æ–≤', operations_created;
    END IF;
  END LOOP;
  
  RAISE NOTICE '–ó–ê–í–ï–†–®–ï–ù–û: –°–æ–∑–¥–∞–Ω–æ –æ–ø–µ—Ä–∞—Ü–∏–π –¥–ª—è % –∑–∞–∫–∞–∑–æ–≤', operations_created;
END $$;

-- ==========================================
-- üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï 5: –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–ª—è –Ω–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
-- ==========================================

-- –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –¥–ª—è —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
INSERT INTO operation_progress (operation_id, completed_units, total_units)
SELECT 
  op.id,
  0 as completed_units,
  GREATEST(ord.quantity, 1) as total_units
FROM operations op
INNER JOIN orders ord ON op."orderId" = ord.id
WHERE NOT EXISTS (
  SELECT 1 FROM operation_progress p WHERE p.operation_id = op.id
);

-- ==========================================
-- üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï 6: –¢—Ä–∏–≥–≥–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
-- ==========================================

-- –§—É–Ω–∫—Ü–∏—è —Ç—Ä–∏–≥–≥–µ—Ä–∞
CREATE OR REPLACE FUNCTION create_operation_progress()
RETURNS TRIGGER AS $$
BEGIN
  INSERT INTO operation_progress (operation_id, total_units)
  SELECT 
    NEW.id,
    GREATEST(ord.quantity, 1)
  FROM orders ord 
  WHERE ord.id = NEW."orderId";
  
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- –°–æ–∑–¥–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä
DROP TRIGGER IF EXISTS trigger_create_operation_progress ON operations;
CREATE TRIGGER trigger_create_operation_progress
  AFTER INSERT ON operations
  FOR EACH ROW
  EXECUTE FUNCTION create_operation_progress();

-- ==========================================
-- üìä –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í
-- ==========================================

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞–∫–∞–∑–æ–≤ –∏ –æ–ø–µ—Ä–∞—Ü–∏–π
SELECT 
  '–†–ï–ó–£–õ–¨–¢–ê–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô:' as info,
  (SELECT COUNT(*) FROM orders) as total_orders,
  (SELECT COUNT(*) FROM operations) as total_operations,
  (SELECT COUNT(*) FROM operation_progress) as operations_with_progress,
  (SELECT COUNT(*) FROM orders o WHERE NOT EXISTS (SELECT 1 FROM operations op WHERE op."orderId" = o.id)) as orders_without_operations;

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å—ã –æ–ø–µ—Ä–∞—Ü–∏–π
SELECT '–°—Ç–∞—Ç—É—Å—ã –æ–ø–µ—Ä–∞—Ü–∏–π:' as info, status, COUNT(*) as count 
FROM operations 
GROUP BY status 
ORDER BY count DESC;

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞ —Å—Ç–∞–Ω–∫–∏
SELECT 
  '–û–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞ —Å—Ç–∞–Ω–∫–∞—Ö:' as info,
  m.code as machine_name,
  op.id as operation_id,
  op."operationNumber",
  op.operationtype,
  op.status,
  prog.progress_percentage
FROM machines m
LEFT JOIN operations op ON m."currentOperation" = op.id OR op."assignedMachine" = m.id
LEFT JOIN operation_progress prog ON op.id = prog.operation_id
WHERE m."isActive" = true
ORDER BY m.code;

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å
SELECT 
  '–û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å:' as info,
  ROUND(AVG(progress_percentage), 2) as avg_progress,
  COUNT(*) as operations_with_progress,
  COUNT(CASE WHEN progress_percentage > 0 THEN 1 END) as operations_in_progress,
  COUNT(CASE WHEN progress_percentage = 100 THEN 1 END) as completed_operations
FROM operation_progress;

-- ==========================================
-- ‚úÖ –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê
-- ==========================================

SELECT 
  'üéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–†–ò–ú–ï–ù–ï–ù–´ –£–°–ü–ï–®–ù–û!' as status,
  '–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ' as message,
  NOW() as completed_at;
