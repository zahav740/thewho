#!/usr/bin/env node

/**
 * –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ Shifts —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 */

const fs = require('fs');
const path = require('path');

console.log('üîç –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã Shifts...\n');

// –°–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
const changedFiles = [
  'frontend/src/i18n/translations.ts',
  'frontend/src/pages/Shifts/ShiftsPage.tsx', 
  'frontend/src/pages/Shifts/components/ShiftsList.tsx',
  'frontend/src/pages/Shifts/components/ShiftForm.tsx',
  'frontend/src/pages/Shifts/components/ActiveMachinesMonitor.tsx',
  'frontend/src/pages/Shifts/components/ShiftStatistics.tsx',
  'frontend/src/components/Layout/Layout.tsx'
];

const basePath = 'C:\\Users\\kasuf\\Downloads\\TheWho\\production-crm';

console.log('üìÅ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:\n');

changedFiles.forEach((file, index) => {
  const fullPath = path.join(basePath, file);
  const exists = fs.existsSync(fullPath);
  const status = exists ? '‚úÖ' : '‚ùå';
  const size = exists ? `(${Math.round(fs.statSync(fullPath).size / 1024)}KB)` : '(–Ω–µ –Ω–∞–π–¥–µ–Ω)';
  
  console.log(`${index + 1}. ${status} ${file} ${size}`);
});

console.log('\nüîß –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ useTranslation –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
const componentsToCheck = [
  'frontend/src/pages/Shifts/ShiftsPage.tsx',
  'frontend/src/pages/Shifts/components/ShiftsList.tsx', 
  'frontend/src/pages/Shifts/components/ShiftForm.tsx',
  'frontend/src/pages/Shifts/components/ActiveMachinesMonitor.tsx',
  'frontend/src/pages/Shifts/components/ShiftStatistics.tsx'
];

componentsToCheck.forEach(file => {
  const fullPath = path.join(basePath, file);
  if (fs.existsSync(fullPath)) {
    const content = fs.readFileSync(fullPath, 'utf8');
    const hasUseTranslation = content.includes('useTranslation');
    const hasTranslationImport = content.includes("from '../../../i18n'") || content.includes("from '../../i18n'");
    const hasTFunction = content.includes('const { t } = useTranslation()');
    
    const status = hasUseTranslation && hasTranslationImport && hasTFunction ? '‚úÖ' : '‚ö†Ô∏è';
    console.log(`${status} ${path.basename(file)}: useTranslation ${hasUseTranslation ? '‚úÖ' : '‚ùå'}, import ${hasTranslationImport ? '‚úÖ' : '‚ùå'}, t() ${hasTFunction ? '‚úÖ' : '‚ùå'}`);
  }
});

console.log('\nüìä –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –≤ translations.ts:\n');

const translationsPath = path.join(basePath, 'frontend/src/i18n/translations.ts');
if (fs.existsSync(translationsPath)) {
  const content = fs.readFileSync(translationsPath, 'utf8');
  
  // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–ª—é—á–∏ shifts.*
  const ruShiftsKeys = (content.match(/'shifts\.[^']+'/g) || []).length;
  const enShiftsKeysMatch = content.match(/en:\s*{([\s\S]*?)},?\s*};\s*export/);
  const enShiftsKeys = enShiftsKeysMatch ? (enShiftsKeysMatch[1].match(/'shifts\.[^']+'/g) || []).length : 0;
  
  console.log(`üìà –†—É—Å—Å–∫–∏–π —è–∑—ã–∫: ${ruShiftsKeys} –∫–ª—é—á–µ–π shifts.*`);
  console.log(`üìà –ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫: ${enShiftsKeys} –∫–ª—é—á–µ–π shifts.*`);
  
  if (ruShiftsKeys === enShiftsKeys && ruShiftsKeys > 50) {
    console.log('‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ —Å–æ–≤–ø–∞–¥–∞–µ—Ç –∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ!');
  } else {
    console.log('‚ö†Ô∏è –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–ª—é—á–µ–π');
  }
} else {
  console.log('‚ùå –§–∞–π–ª –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω');
}

console.log('\nüéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:\n');
console.log('1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: npm start');
console.log('2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É /shifts'); 
console.log('3. –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç–µ —è–∑—ã–∫ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É –≤ header');
console.log('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å–µ –≤–∫–ª–∞–¥–∫–∏ –∏ —Ñ—É–Ω–∫—Ü–∏–∏');
console.log('5. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å —Å–º–µ–Ω—ã');
console.log('6. –û—Ç–∫—Ä–æ–π—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É');

console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
console.log('\nüåü –°—Ç—Ä–∞–Ω–∏—Ü–∞ Shifts –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –Ω–∞ —Ä—É—Å—Å–∫–æ–º –∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–∞—Ö!');
