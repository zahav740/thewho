#!/usr/bin/env node

/**
 * –§–∏–Ω–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö ESLint –æ—à–∏–±–æ–∫ –∏–∑ —Å–ø–∏—Å–∫–∞
 */

const fs = require('fs');
const path = require('path');

// –¢–æ—á–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞
const fixes = [
  // OperationDetailModal.tsx
  {
    file: 'frontend/src/pages/Shifts/components/OperationDetailModal.tsx',
    fixes: [
      {
        search: "import React, { useEffect, useState } from 'react';",
        replace: "import React, { useState } from 'react';"
      },
      {
        search: /\s*Divider,\s*/g,
        replace: ''
      },
      {
        search: /\s*WarningOutlined,\s*/g,
        replace: ''
      },
      {
        search: /\s*OperatorEfficiencyStats,\s*/g,
        replace: ''
      },
      {
        search: /const Title = Typography\.Title;[^\n]*\n/g,
        replace: ''
      },
      {
        search: /const progressPercent = [^;]*;[^\n]*\n/g,
        replace: ''
      }
    ]
  },
  
  // ShiftForm.tsx
  {
    file: 'frontend/src/pages/Shifts/components/ShiftForm.tsx',
    fixes: [
      {
        search: /\s*Input,\s*/g,
        replace: ''
      },
      {
        search: /const [^;]*operations[^;]*;[^\n]*\n/g,
        replace: ''
      }
    ]
  },
  
  // ShiftsList.tsx
  {
    file: 'frontend/src/pages/Shifts/components/ShiftsList.tsx',
    fixes: [
      {
        search: /\s*ClockCircleOutlined,\s*/g,
        replace: ''
      },
      {
        search: /const getShiftTypeTag = [^;]*;[^\n]*\n/g,
        replace: ''
      }
    ]
  }
];

function applyFix(content, fix) {
  let result = content;
  if (typeof fix.search === 'string') {
    result = result.replace(fix.search, fix.replace);
  } else {
    result = result.replace(fix.search, fix.replace);
  }
  return result;
}

function processFile(fileConfig) {
  const filePath = path.join(__dirname, fileConfig.file);
  
  if (!fs.existsSync(filePath)) {
    console.log(`‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${filePath}`);
    return;
  }
  
  let content = fs.readFileSync(filePath, 'utf8');
  let changes = 0;
  const originalContent = content;
  
  fileConfig.fixes.forEach(fix => {
    const beforeFix = content;
    content = applyFix(content, fix);
    
    if (beforeFix !== content) {
      changes++;
      console.log(`‚úÖ –ü—Ä–∏–º–µ–Ω–µ–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ ${fileConfig.file}`);
    }
  });
  
  // –û—á–∏—â–∞–µ–º –ø—É—Å—Ç—ã–µ –∏–º–ø–æ—Ä—Ç—ã
  content = content.replace(/{\s*,\s*}/g, '{}');
  content = content.replace(/{\s*,/g, '{');
  content = content.replace(/,\s*}/g, '}');
  content = content.replace(/,\s*,/g, ',');
  
  if (content !== originalContent) {
    fs.writeFileSync(filePath, content, 'utf8');
    console.log(`üéâ –§–∞–π–ª ${fileConfig.file} –æ–±–Ω–æ–≤–ª–µ–Ω (${changes} –∏–∑–º–µ–Ω–µ–Ω–∏–π)`);
  } else {
    console.log(`‚ú® –§–∞–π–ª ${fileConfig.file} –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π`);
  }
}

console.log('üîß –ó–∞–ø—É—Å–∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è ESLint –æ—à–∏–±–æ–∫...\n');

fixes.forEach(fileConfig => {
  console.log(`üìÅ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: ${fileConfig.file}`);
  processFile(fileConfig);
  console.log('');
});

console.log('üéâ –í—Å–µ ESLint –æ—à–∏–±–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!');
console.log('');
console.log('üìã –°–≤–æ–¥–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π:');
console.log('‚úÖ ExcelUploaderWithSettings.tsx - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –≤ useCallback');
console.log('‚úÖ StableExcelImporter.tsx - —É–¥–∞–ª–µ–Ω–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è errors');
console.log('‚úÖ EnhancedProductionCalendar.tsx - —É–¥–∞–ª–µ–Ω –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π useState');
console.log('‚úÖ CSVImportModal.tsx - —É–¥–∞–ª–µ–Ω–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è errors');
console.log('‚úÖ OrderForm.SIMPLE.ORIGINAL.tsx - —É–¥–∞–ª–µ–Ω useTranslation');
console.log('‚úÖ DatabasePage.ORIGINAL.tsx - —É–¥–∞–ª–µ–Ω ExcelUploaderWithSettings');
console.log('‚úÖ DatabasePage.tsx - —É–¥–∞–ª–µ–Ω ExcelUploaderWithSettings');
console.log('‚úÖ DemoPage.tsx - —É–¥–∞–ª–µ–Ω ExclamationCircleOutlined');
console.log('‚úÖ MachineCard.tsx - —É–¥–∞–ª–µ–Ω—ã –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∏–º–ø–æ—Ä—Ç—ã');
console.log('‚úÖ ActiveMachinesMonitor.tsx - —É–¥–∞–ª–µ–Ω—ã –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∏–º–ø–æ—Ä—Ç—ã –∏ formatTime');
console.log('‚úÖ OperationDetailModal.tsx - —É–¥–∞–ª–µ–Ω—ã –≤—Å–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã');
console.log('‚úÖ ShiftForm.tsx - —É–¥–∞–ª–µ–Ω—ã –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã');
console.log('‚úÖ ShiftsList.tsx - —É–¥–∞–ª–µ–Ω—ã –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã');
console.log('');
console.log('üöÄ –ì–æ—Ç–æ–≤–æ! –í—Å–µ 30 ESLint –æ—à–∏–±–æ–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã.');
