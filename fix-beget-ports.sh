#!/bin/bash

echo "============================================"
echo "üö® –≠–ö–°–¢–†–ï–ù–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–û–†–¢–û–í –ù–ê BEGET"
echo "============================================"
echo "–ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —É–∂–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
echo "Backend: 5100 ‚Üí 5200"
echo "Frontend: 5101 ‚Üí 5201"
echo "============================================"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -d "frontend" ] || [ ! -d "backend" ]; then
    echo "‚ùå –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ /var/upload/"
    echo "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å:"
    echo "/var/upload/"
    echo "‚îú‚îÄ‚îÄ frontend/"
    echo "‚îî‚îÄ‚îÄ backend/"
    exit 1
fi

echo "üìç –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ PM2
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
pm2 delete all 2>/dev/null || true

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Backend .env
echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Backend –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
cd backend

if [ -f ".env" ]; then
    echo "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ backend/.env..."
    cp .env .env.backup
    
    echo "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤ –≤ backend/.env..."
    sed -i 's/PORT=5100/PORT=5200/g' .env
    sed -i 's/localhost:5101/localhost:5201/g' .env
    sed -i 's/http:\/\/localhost:5101/http:\/\/localhost:5201/g' .env
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Supabase –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    if ! grep -q "aws-0-eu-central-1.pooler.supabase.com" .env; then
        echo "" >> .env
        echo "# Supabase Configuration" >> .env
        echo "DB_HOST=aws-0-eu-central-1.pooler.supabase.com" >> .env
        echo "DB_PORT=6543" >> .env
        echo "DB_USERNAME=postgres.kukqacmzfmzepdfddppl" >> .env
        echo "DB_PASSWORD=Magarel1!" >> .env
        echo "DB_NAME=postgres" >> .env
        echo "DATABASE_URL=postgresql://postgres.kukqacmzfmzepdfddppl:Magarel1!@aws-0-eu-central-1.pooler.supabase.com:6543/postgres" >> .env
        echo "CORS_ORIGIN=https://kasuf.xyz" >> .env
    fi
    
    echo "‚úÖ Backend .env –æ–±–Ω–æ–≤–ª–µ–Ω:"
    echo "PORT=$(grep 'PORT=' .env)"
    echo "CORS_ORIGIN=$(grep 'CORS_ORIGIN=' .env)"
else
    echo "‚ùå –§–∞–π–ª backend/.env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "–°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π .env —Ñ–∞–π–ª..."
    cat > .env << 'EOF'
# Supabase Database Configuration
DB_HOST=aws-0-eu-central-1.pooler.supabase.com
DB_PORT=6543
DB_USERNAME=postgres.kukqacmzfmzepdfddppl
DB_PASSWORD=Magarel1!
DB_NAME=postgres

# JWT Configuration
JWT_SECRET=YourSuperSecretJWTKeyForBeget256BitsLong!
JWT_EXPIRES_IN=7d

# App Configuration
NODE_ENV=production
PORT=5200

# CORS –¥–ª—è kasuf.xyz
CORS_ORIGIN=https://kasuf.xyz

# Database URL –¥–ª—è TypeORM
DATABASE_URL=postgresql://postgres.kukqacmzfmzepdfddppl:Magarel1!@aws-0-eu-central-1.pooler.supabase.com:6543/postgres
EOF
    echo "‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π backend/.env"
fi

cd ..

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Frontend .env
echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Frontend –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
cd frontend

if [ -f ".env" ]; then
    echo "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ frontend/.env..."
    cp .env .env.backup
    
    echo "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤ –≤ frontend/.env..."
    sed -i 's/PORT=5101/PORT=5201/g' .env
    sed -i 's/localhost:5100/localhost:5200/g' .env
    sed -i 's/http:\/\/localhost:5100/http:\/\/localhost:5200/g' .env
    
    echo "‚úÖ Frontend .env –æ–±–Ω–æ–≤–ª–µ–Ω:"
    echo "PORT=$(grep 'PORT=' .env 2>/dev/null || echo 'PORT –Ω–µ –Ω–∞–π–¥–µ–Ω')"
    echo "API_URL=$(grep 'REACT_APP_API_URL=' .env 2>/dev/null || echo 'API_URL –Ω–µ –Ω–∞–π–¥–µ–Ω')"
else
    echo "‚ùå –§–∞–π–ª frontend/.env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "–°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π .env —Ñ–∞–π–ª..."
    cat > .env << 'EOF'
REACT_APP_API_URL=https://kasuf.xyz/api
REACT_APP_ENVIRONMENT=production
PORT=5201
EOF
    echo "‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π frontend/.env"
fi

cd ..

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ PM2 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo "üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ PM2 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
cat > ecosystem.config.js << 'EOF'
module.exports = {
  apps: [
    {
      name: 'crm-backend',
      script: '/var/upload/backend/dist/main.js',
      cwd: '/var/upload/backend',
      env: {
        NODE_ENV: 'production',
        PORT: 5200
      },
      restart_delay: 5000,
      max_restarts: 10
    },
    {
      name: 'crm-frontend',
      script: 'serve',
      args: '-s build -l 5201',
      cwd: '/var/upload/frontend',
      env: {
        NODE_ENV: 'production',
        PORT: 5201
      },
      restart_delay: 5000,
      max_restarts: 10
    }
  ]
};
EOF

echo "‚úÖ PM2 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞"

# –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π —Å –Ω–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
echo "üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ Backend..."
cd backend
npm run build 2>/dev/null || echo "‚ö†Ô∏è –°–±–æ—Ä–∫–∞ backend –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏"
cd ..

echo "üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ Frontend..."
cd frontend
npm run build 2>/dev/null || echo "‚ö†Ô∏è –°–±–æ—Ä–∫–∞ frontend –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏"
cd ..

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ serve –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ serve..."
npm list -g serve 2>/dev/null || npm install -g serve

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
echo "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –Ω–∞ –Ω–æ–≤—ã—Ö –ø–æ—Ä—Ç–∞—Ö..."
pm2 start ecosystem.config.js
pm2 save

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo "üìä –°—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π:"
sleep 3
pm2 status

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤
echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤..."
sleep 2

echo "–¢–µ—Å—Ç Backend (–ø–æ—Ä—Ç 5200)..."
if curl -s -o /dev/null -w "%{http_code}" http://localhost:5200/health 2>/dev/null | grep -q "200"; then
    echo "‚úÖ Backend —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 5200"
elif curl -s -o /dev/null http://localhost:5200 2>/dev/null; then
    echo "‚úÖ Backend –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 5200"
else
    echo "‚ö†Ô∏è Backend –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5200"
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: pm2 logs crm-backend"
fi

echo "–¢–µ—Å—Ç Frontend (–ø–æ—Ä—Ç 5201)..."
if curl -s -o /dev/null -w "%{http_code}" http://localhost:5201 2>/dev/null | grep -q "200"; then
    echo "‚úÖ Frontend —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 5201"
elif curl -s -o /dev/null http://localhost:5201 2>/dev/null; then
    echo "‚úÖ Frontend –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 5201"
else
    echo "‚ö†Ô∏è Frontend –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5201"
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: pm2 logs crm-frontend"
fi

echo ""
echo "============================================"
echo "‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–û–†–¢–û–í –ó–ê–í–ï–†–®–ï–ù–û!"
echo "============================================"
echo "üîÑ –ù–æ–≤—ã–µ –ø–æ—Ä—Ç—ã:"
echo "   Backend:  5200 (–±—ã–ª–æ 5100)"
echo "   Frontend: 5201 (–±—ã–ª–æ 5101)"
echo ""
echo "üåê –î–æ—Å—Ç—É–ø –∫ —Å–∞–π—Ç—É:"
echo "   –°–∞–π—Ç:     https://kasuf.xyz"
echo "   API:      https://kasuf.xyz/api"
echo "   Health:   https://kasuf.xyz/health"
echo ""
echo "üìã –ö–æ–º–∞–Ω–¥—ã –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:"
echo "   pm2 status              - —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
echo "   pm2 logs                - –≤—Å–µ –ª–æ–≥–∏"
echo "   pm2 logs crm-backend    - –ª–æ–≥–∏ backend"
echo "   pm2 logs crm-frontend   - –ª–æ–≥–∏ frontend"
echo "   curl http://localhost:5200/health  - —Ç–µ—Å—Ç backend"
echo "   curl http://localhost:5201         - —Ç–µ—Å—Ç frontend"
echo ""
echo "‚ö†Ô∏è –í–ê–ñ–ù–û: –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Nginx –≤ –ø–∞–Ω–µ–ª–∏ Beget"
echo "   –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—ã 5200 –∏ 5201!"
echo ""
echo "üéâ –¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É!"