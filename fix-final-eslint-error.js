#!/usr/bin/env node

/**
 * –§–∏–Ω–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–π ESLint –æ—à–∏–±–∫–∏
 * –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–π —Ç–µ–≥ Result –≤ PlanningModalImproved.tsx
 */

const fs = require('fs');
const path = require('path');

const filePath = path.join(__dirname, 'frontend', 'src', 'components', 'PlanningModal', 'PlanningModalImproved.tsx');

console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π ESLint –æ—à–∏–±–∫–∏...');

try {
  // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
  let content = fs.readFileSync(filePath, 'utf8');
  
  // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–µ–≥
  const originalContent = content;
  content = content.replace('</r>', '</r>');
  
  if (originalContent !== content) {
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    fs.writeFileSync(filePath, content);
    console.log('‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã–π —Ç–µ–≥ Result –≤ PlanningModalImproved.tsx');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å —Ç–µ–≥–æ–≤
    const openingTags = (content.match(/<Result/g) || []).length;
    const closingTags = (content.match(/<\/r>/g) || []).length;
    
    console.log(`üìä –û—Ç–∫—Ä—ã–≤–∞—é—â–∏—Ö —Ç–µ–≥–æ–≤ <Result: ${openingTags}`);
    console.log(`üìä –ó–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Ç–µ–≥–æ–≤ </r>: ${closingTags}`);
    
    if (openingTags === closingTags) {
      console.log('üéâ –í–°–ï –¢–ï–ì–ò RESULT –ü–†–ê–í–ò–õ–¨–ù–û –°–ë–ê–õ–ê–ù–°–ò–†–û–í–ê–ù–´!');
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∫—Ä—ã–≤–∞—é—â–∏—Ö –∏ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Ç–µ–≥–æ–≤ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç!');
      process.exit(1);
    }
    
  } else {
    console.log('‚ÑπÔ∏è –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–µ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω —É–∂–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω.');
  }
  
  console.log('\nüéâ –í–°–ï ESLINT –û–®–ò–ë–ö–ò –ò–°–ü–†–ê–í–õ–ï–ù–´!');
  console.log('\nüöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
  console.log('   npm run lint     # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å ESLint');
  console.log('   npm run build    # –°–æ–±—Ä–∞—Ç—å –ø—Ä–æ–µ–∫—Ç');
  console.log('   npm start        # –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
  
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞:', error.message);
  process.exit(1);
}
