/**
 * @file: fix-pdf-location.js
 * @description: –°–∫—Ä–∏–ø—Ç –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è PDF —Ñ–∞–π–ª–∞ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ
 * @created: 2025-06-21
 */

const fs = require('fs');
const path = require('path');

const PDF_FILENAME = '1750497060623-385439311.pdf';

// –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–∞ –≤–æ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö
const searchPaths = [
  path.join(process.cwd(), 'uploads', 'pdf', PDF_FILENAME),
  path.join(process.cwd(), 'backend', 'uploads', 'pdf', PDF_FILENAME),
  path.join(__dirname, 'backend', 'uploads', 'pdf', PDF_FILENAME),
  path.join(__dirname, 'uploads', 'pdf', PDF_FILENAME),
];

// –¶–µ–ª–µ–≤–æ–µ –º–µ—Å—Ç–æ
const targetPath = path.join(process.cwd(), 'uploads', 'pdf', PDF_FILENAME);
const targetDir = path.dirname(targetPath);

console.log('üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –†–ê–°–ü–û–õ–û–ñ–ï–ù–ò–Ø PDF –§–ê–ô–õ–ê');
console.log('=====================================\n');

console.log(`üìÅ –¶–µ–ª–µ–≤–æ–π –ø—É—Ç—å: ${targetPath}`);
console.log(`üìÅ –¶–µ–ª–µ–≤–∞—è –ø–∞–ø–∫–∞: ${targetDir}\n`);

console.log('üîç –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–∞ –≤ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö:');

let foundPath = null;
searchPaths.forEach((searchPath, index) => {
  const exists = fs.existsSync(searchPath);
  console.log(`   ${index + 1}. ${exists ? '‚úÖ' : '‚ùå'} ${searchPath}`);
  
  if (exists && !foundPath) {
    foundPath = searchPath;
  }
});

if (!foundPath) {
  console.log('\n‚ùå PDF —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –≤ –æ–¥–Ω–æ–º –∏–∑ –ø—É—Ç–µ–π');
  console.log('üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –µ–≥–æ –∑–∞–Ω–æ–≤–æ');
  process.exit(1);
}

console.log(`\n‚úÖ –§–∞–π–ª –Ω–∞–π–¥–µ–Ω: ${foundPath}`);

// –°–æ–∑–¥–∞–µ–º —Ü–µ–ª–µ–≤—É—é –ø–∞–ø–∫—É, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
if (!fs.existsSync(targetDir)) {
  console.log(`üìÅ –°–æ–∑–¥–∞—é –ø–∞–ø–∫—É: ${targetDir}`);
  fs.mkdirSync(targetDir, { recursive: true });
}

// –ï—Å–ª–∏ —Ñ–∞–π–ª —É–∂–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –º–µ—Å—Ç–µ
if (foundPath === targetPath) {
  console.log('‚úÖ –§–∞–π–ª —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –º–µ—Å—Ç–µ!');
  console.log('\nüéØ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ backend:');
  console.log('   node debug-pdf-backend.js');
  process.exit(0);
}

// –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª
try {
  console.log(`üìã –ö–æ–ø–∏—Ä—É—é —Ñ–∞–π–ª...`);
  console.log(`   –ò–∑: ${foundPath}`);
  console.log(`   –í:  ${targetPath}`);
  
  fs.copyFileSync(foundPath, targetPath);
  
  const stats = fs.statSync(targetPath);
  console.log(`‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω! –†–∞–∑–º–µ—Ä: ${stats.size} –±–∞–π—Ç`);
  
  console.log('\nüéØ –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É:');
  console.log('   node debug-pdf-backend.js');
  
} catch (error) {
  console.log(`‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è: ${error.message}`);
  process.exit(1);
}
