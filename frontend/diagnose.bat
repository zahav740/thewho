@echo off
chcp 65001 > nul
echo ==========================================
echo üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú –°–ë–û–†–ö–ò
echo ==========================================
echo.

echo ‚è∞ –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: %date% %time%
echo.

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: –ë–∞–∑–æ–≤—ã–µ —Ñ–∞–π–ª—ã
echo üìÅ –ü–†–û–í–ï–†–ö–ê 1: –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
echo ==========================================
echo –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: %cd%
echo.

if exist "package.json" (
    echo ‚úÖ package.json –Ω–∞–π–¥–µ–Ω
    echo üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ package.json:
    type package.json | findstr "name\|version\|scripts"
) else (
    echo ‚ùå package.json –ù–ï –ù–ê–ô–î–ï–ù
    echo üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç–µ –∏–∑ –ø–∞–ø–∫–∏ frontend
    goto :end
)

if exist "src" (
    echo ‚úÖ –ø–∞–ø–∫–∞ src –Ω–∞–π–¥–µ–Ω–∞
) else (
    echo ‚ùå –ø–∞–ø–∫–∞ src –ù–ï –ù–ê–ô–î–ï–ù–ê
)

if exist "public" (
    echo ‚úÖ –ø–∞–ø–∫–∞ public –Ω–∞–π–¥–µ–Ω–∞
) else (
    echo ‚ùå –ø–∞–ø–∫–∞ public –ù–ï –ù–ê–ô–î–ï–ù–ê
)

echo.
REM –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: Node.js –∏ npm
echo üîß –ü–†–û–í–ï–†–ö–ê 2: –û–∫—Ä—É–∂–µ–Ω–∏–µ
echo ==========================================

echo –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js...
node --version > temp_node.txt 2>&1
if errorlevel 1 (
    echo ‚ùå Node.js –ù–ï –ù–ê–ô–î–ï–ù –∏–ª–∏ –ù–ï –†–ê–ë–û–¢–ê–ï–¢
    echo üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js —Å https://nodejs.org
    type temp_node.txt
    del temp_node.txt
    goto :end
) else (
    set /p NODE_VER=<temp_node.txt
    echo ‚úÖ Node.js —Ä–∞–±–æ—Ç–∞–µ—Ç: %NODE_VER%
    del temp_node.txt
)

echo –ü—Ä–æ–≤–µ—Ä–∫–∞ npm...
npm --version > temp_npm.txt 2>&1
if errorlevel 1 (
    echo ‚ùå npm –ù–ï –ù–ê–ô–î–ï–ù –∏–ª–∏ –ù–ï –†–ê–ë–û–¢–ê–ï–¢
    type temp_npm.txt
    del temp_npm.txt
    goto :end
) else (
    set /p NPM_VER=<temp_npm.txt
    echo ‚úÖ npm —Ä–∞–±–æ—Ç–∞–µ—Ç: %NPM_VER%
    del temp_npm.txt
)

echo.
REM –ü—Ä–æ–≤–µ—Ä–∫–∞ 3: –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo üì¶ –ü–†–û–í–ï–†–ö–ê 3: –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo ==========================================

if exist "node_modules" (
    echo ‚úÖ node_modules –Ω–∞–π–¥–µ–Ω
    echo üìä –†–∞–∑–º–µ—Ä node_modules:
    for /f "tokens=3" %%a in ('dir node_modules /s /-c 2^>nul ^| find "File(s)" 2^>nul') do echo –§–∞–π–ª–æ–≤: %%a
) else (
    echo ‚ùå node_modules –ù–ï –ù–ê–ô–î–ï–ù
    echo üí° –¢—Ä–µ–±—É–µ—Ç—Å—è: npm install
)

if exist "package-lock.json" (
    echo ‚úÖ package-lock.json –Ω–∞–π–¥–µ–Ω
) else (
    echo ‚ö†Ô∏è package-lock.json –Ω–µ –Ω–∞–π–¥–µ–Ω (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ)
)

echo.
REM –ü—Ä–æ–≤–µ—Ä–∫–∞ 4: TypeScript –∫–æ–º–ø–∏–ª—è—Ü–∏—è
echo üîç –ü–†–û–í–ï–†–ö–ê 4: TypeScript
echo ==========================================

echo –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤–æ–π TypeScript –∫–æ–º–ø–∏–ª—è—Ü–∏–∏...
npx tsc --noEmit --skipLibCheck > temp_tsc.txt 2>&1
if errorlevel 1 (
    echo ‚ùå –ù–ê–ô–î–ï–ù–´ –û–®–ò–ë–ö–ò TYPESCRIPT:
    echo ----------------------------------------
    type temp_tsc.txt
    echo ----------------------------------------
    echo.
    echo üí° –ù–£–ñ–ù–û –ò–°–ü–†–ê–í–ò–¢–¨ –û–®–ò–ë–ö–ò –í–´–®–ï
    del temp_tsc.txt
) else (
    echo ‚úÖ TypeScript –∫–æ–º–ø–∏–ª—è—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ
    del temp_tsc.txt
)

echo.
REM –ü—Ä–æ–≤–µ—Ä–∫–∞ 5: –¢–µ—Å—Ç –ø—Ä–æ—Å—Ç–æ–π —Å–±–æ—Ä–∫–∏
echo üèóÔ∏è –ü–†–û–í–ï–†–ö–ê 5: –¢–µ—Å—Ç —Å–±–æ—Ä–∫–∏
echo ==========================================

echo –ü–æ–ø—ã—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π —Å–±–æ—Ä–∫–∏...
echo (—ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç)

REM –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
set GENERATE_SOURCEMAP=false
set CI=false

echo –ó–∞–ø—É—Å–∫ npm run build...
npm run build > temp_build.txt 2>&1
if errorlevel 1 (
    echo ‚ùå –°–ë–û–†–ö–ê –ù–ï –£–î–ê–õ–ê–°–¨
    echo ----------------------------------------
    echo –ü–û–°–õ–ï–î–ù–ò–ï –°–¢–†–û–ö–ò –û–®–ò–ë–ö–ò:
    powershell -Command "Get-Content temp_build.txt | Select-Object -Last 20"
    echo ----------------------------------------
    echo.
    echo üìÑ –ü–æ–ª–Ω—ã–π –ª–æ–≥ –æ—à–∏–±–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ temp_build.txt
    echo –û—Ç–∫—Ä–æ–π—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
) else (
    echo ‚úÖ –°–ë–û–†–ö–ê –ü–†–û–®–õ–ê –£–°–ü–ï–®–ù–û!
    del temp_build.txt
    
    if exist "build" (
        echo ‚úÖ –ü–∞–ø–∫–∞ build —Å–æ–∑–¥–∞–Ω–∞
        echo üìä –°–æ–¥–µ—Ä–∂–∏–º–æ–µ build:
        dir build /b
    ) else (
        echo ‚ùå –ü–∞–ø–∫–∞ build –Ω–µ —Å–æ–∑–¥–∞–ª–∞—Å—å (—Å—Ç—Ä–∞–Ω–Ω–æ...)
    )
)

echo.
REM –ü—Ä–æ–≤–µ—Ä–∫–∞ 6: –ú–æ–±–∏–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
echo üì± –ü–†–û–í–ï–†–ö–ê 6: –ú–æ–±–∏–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
echo ==========================================

if exist "src\hooks\useMobile.ts" (
    echo ‚úÖ useMobile.ts –Ω–∞–π–¥–µ–Ω
) else (
    echo ‚ùå useMobile.ts –ù–ï –ù–ê–ô–î–ï–ù
)

if exist "src\components\Mobile\MobileWrapper.tsx" (
    echo ‚úÖ MobileWrapper.tsx –Ω–∞–π–¥–µ–Ω
) else (
    echo ‚ùå MobileWrapper.tsx –ù–ï –ù–ê–ô–î–ï–ù
)

if exist "src\styles\mobile.css" (
    echo ‚úÖ mobile.css –Ω–∞–π–¥–µ–Ω
) else (
    echo ‚ùå mobile.css –ù–ï –ù–ê–ô–î–ï–ù
)

if exist "mobile-styles.css" (
    echo ‚úÖ mobile-styles.css –Ω–∞–π–¥–µ–Ω
) else (
    echo ‚ùå mobile-styles.css –ù–ï –ù–ê–ô–î–ï–ù
)

if exist "mobile-logic.js" (
    echo ‚úÖ mobile-logic.js –Ω–∞–π–¥–µ–Ω
) else (
    echo ‚ùå mobile-logic.js –ù–ï –ù–ê–ô–î–ï–ù
)

echo.
REM –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
echo üìã –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢
echo ==========================================

echo –ü—Ä–æ–±–ª–µ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:
echo.

if not exist "package.json" echo üî¥ –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –ø–∞–ø–∫–∏ frontend
if not exist "node_modules" echo üî¥ –í—ã–ø–æ–ª–Ω–∏—Ç–µ: npm install
if exist "temp_tsc.txt" echo üî¥ –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ TypeScript
if exist "temp_build.txt" echo üî¥ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ —Å–±–æ—Ä–∫–∏ –≤ temp_build.txt

echo.
echo –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:
echo 1. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã –≤—ã—à–µ
echo 2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É —Å–Ω–æ–≤–∞
echo 3. –ï—Å–ª–∏ –≤—Å–µ ‚úÖ, –∑–∞–ø—É—Å—Ç–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω–æ–π –±–∞—Ç–Ω–∏–∫

:end
echo.
echo ‚è∞ –í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è: %date% %time%
echo.
echo –ù–∞–∂–º–∏—Ç–µ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É –¥–ª—è –≤—ã—Ö–æ–¥–∞...
pause > nul
