/**
 * @file: OperationCompletionModal.tsx (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)
 * @description: –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –Ω–µ—Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
 * @dependencies: antd, react-query
 * @created: 2025-06-12
 * @fixed: 2025-06-16 - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–µ—Ç–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –æ—Ç–ª–∞–¥–∫–∞
 */
import React, { useEffect, useState } from 'react';
import {
  Modal,
  Button,
  Space,
  Typography,
  Card,
  Row,
  Col,
  Statistic,
  Progress,
  Tag,
  Divider,
  Alert,
} from 'antd';
import {
  CheckCircleOutlined,
  PlayCircleOutlined,
  SettingOutlined,
  WarningOutlined,
  TrophyOutlined,
  BugOutlined,
} from '@ant-design/icons';
import { useTranslation } from '../../i18n';

const { Title, Text } = Typography;

interface CompletedOperation {
  id: string;
  operationNumber: number;
  operationType: string;
  orderDrawingNumber: string;
  machineName: string;
  machineType: string;
  targetQuantity: number;
  completedQuantity: number;
  progressPercentage: number;
  estimatedTime: number;
  actualTime?: number;
  dayShiftQuantity: number;
  nightShiftQuantity: number;
  dayShiftOperator?: string;
  nightShiftOperator?: string;
  startedAt: string;
  completedAt: string;
}

export interface OperationCompletionModalProps {
  visible: boolean;
  completedOperation: CompletedOperation | null;
  onClose: () => void;
  onCloseOperation: () => void;
  onContinueOperation: () => void;
  onPlanNewOperation: () => void;
  loading?: boolean;
}

const OperationCompletionModal: React.FC<OperationCompletionModalProps> = ({
  visible,
  completedOperation,
  onClose,
  onCloseOperation,
  onContinueOperation,
  onPlanNewOperation,
  loading = false,
}) => {
  const { t } = useTranslation();
  const [isDataValid, setIsDataValid] = useState(true);
  const [correctedData, setCorrectedData] = useState<CompletedOperation | null>(null);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  useEffect(() => {
    if (completedOperation && visible) {
      console.log('üîç –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –ö–û–ú–ü–û–ù–ï–ù–¢: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞:', {
        original: completedOperation,
        targetQuantity: completedOperation.targetQuantity,
        completedQuantity: completedOperation.completedQuantity,
        dayShift: completedOperation.dayShiftQuantity,
        nightShift: completedOperation.nightShiftQuantity,
        calculatedTotal: completedOperation.dayShiftQuantity + completedOperation.nightShiftQuantity
      });

      // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–ª—å–Ω—ã—Ö —Å–º–µ–Ω
      const realCompletedQuantity = completedOperation.dayShiftQuantity + completedOperation.nightShiftQuantity;
      const realProgressPercentage = Math.round((realCompletedQuantity / completedOperation.targetQuantity) * 100);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
      const dataIsIncorrect = Math.abs(realCompletedQuantity - completedOperation.completedQuantity) > 0.1;
      
      if (dataIsIncorrect) {
        console.warn('‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ù–ï–¢–û–ß–ù–´–ï –î–ê–ù–ù–´–ï:', {
          '–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ completedQuantity': completedOperation.completedQuantity,
          '–†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–¥–µ–Ω—å + –Ω–æ—á—å)': realCompletedQuantity,
          '–†–∞–∑–Ω–∏—Ü–∞': Math.abs(realCompletedQuantity - completedOperation.completedQuantity),
          '–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å': realProgressPercentage + '%'
        });
        
        setIsDataValid(false);
      } else {
        setIsDataValid(true);
      }

      // –°–æ–∑–¥–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –¥–∞–Ω–Ω—ã—Ö
      const corrected: CompletedOperation = {
        ...completedOperation,
        completedQuantity: realCompletedQuantity,
        progressPercentage: realProgressPercentage,
      };
      
      setCorrectedData(corrected);
    }
  }, [completedOperation, visible]);

  if (!completedOperation || !correctedData) return null;

  const efficiency = correctedData.actualTime && correctedData.estimatedTime
    ? Math.round((correctedData.estimatedTime / correctedData.actualTime) * 100)
    : 100;

  const isOverproduced = correctedData.completedQuantity > correctedData.targetQuantity;
  const isTargetReached = correctedData.completedQuantity >= correctedData.targetQuantity;
  const productionRate = correctedData.actualTime 
    ? Math.round((correctedData.completedQuantity / (correctedData.actualTime / 60)) * 100) / 100
    : 0;

  return (
    <Modal
      title={
        <Space>
          <TrophyOutlined style={{ color: isTargetReached ? '#52c41a' : '#faad14', fontSize: '24px' }} />
          <Title level={3} style={{ margin: 0, color: isTargetReached ? '#52c41a' : '#faad14' }}>
            {isTargetReached ? 'üéâ –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!' : '‚ö†Ô∏è –û–ø–µ—Ä–∞—Ü–∏—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ'}
          </Title>
          {!isDataValid && (
            <BugOutlined 
              style={{ color: '#ff4d4f', fontSize: '20px', marginLeft: 8 }} 
              title="–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–µ—Ç–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"
            />
          )}
        </Space>
      }
      open={visible}
      onCancel={onClose}
      width={800}
      footer={null}
      centered
      style={{ borderRadius: '12px' }}
      className="operation-completion-modal"
    >
      <div style={{ padding: '20px 0' }}>
        {/* –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –Ω–µ—Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö */}
        {!isDataValid && (
          <Alert
            message="üêõ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–µ—Ç–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!"
            description={
              <div>
                <Text>–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –≤ –¥–∞–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–∏. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã:</Text>
                <ul style={{ marginTop: 8, marginBottom: 0 }}>
                  <li><strong>–ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:</strong> {completedOperation.completedQuantity} –¥–µ—Ç–∞–ª–µ–π ({completedOperation.progressPercentage}%)</li>
                  <li><strong>–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:</strong> {correctedData.completedQuantity} –¥–µ—Ç–∞–ª–µ–π ({correctedData.progressPercentage}%)</li>
                  <li><strong>–†–∞—Å—á–µ—Ç:</strong> –î–µ–Ω—å ({correctedData.dayShiftQuantity}) + –ù–æ—á—å ({correctedData.nightShiftQuantity}) = {correctedData.completedQuantity}</li>
                </ul>
              </div>
            }
            type="warning"
            showIcon
            style={{ marginBottom: 20 }}
          />
        )}

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–ø–µ—Ä–∞—Ü–∏–∏ */}
        <Card
          style={{
            marginBottom: '20px',
            backgroundColor: isTargetReached ? '#f6ffed' : '#fff7e6',
            borderColor: isTargetReached ? '#b7eb8f' : '#ffd591',
            borderRadius: '8px',
          }}
        >
          <Row gutter={[16, 16]} align="middle">
            <Col span={12}>
              <Space direction="vertical" size={4}>
                <Text strong style={{ fontSize: '16px' }}>
                  –û–ø–µ—Ä–∞—Ü–∏—è #{correctedData.operationNumber}
                </Text>
                <Text type="secondary">
                  üìÑ {correctedData.orderDrawingNumber}
                </Text>
                <Text type="secondary">
                  üè≠ {correctedData.machineName} ({correctedData.machineType})
                </Text>
                <Text type="secondary">
                  üîß {correctedData.operationType}
                </Text>
              </Space>
            </Col>
            <Col span={12}>
              <div style={{ textAlign: 'center' }}>
                <Progress
                  type="circle"
                  percent={Math.min(correctedData.progressPercentage, 100)}
                  size={100}
                  status={isTargetReached ? 'success' : 'active'}
                  strokeColor={isTargetReached ? '#52c41a' : '#faad14'}
                />
                <div style={{ marginTop: '8px' }}>
                  <Text strong style={{ fontSize: '14px', color: isTargetReached ? '#52c41a' : '#faad14' }}>
                    {correctedData.completedQuantity} / {correctedData.targetQuantity}
                  </Text>
                  <br />
                  <Text type="secondary" style={{ fontSize: '12px' }}>
                    –¥–µ—Ç–∞–ª–µ–π –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
                  </Text>
                  {!isDataValid && (
                    <div style={{ marginTop: 4 }}>
                      <Tag color="orange" style={{ fontSize: '10px' }}>
                        –î–∞–Ω–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã
                      </Tag>
                    </div>
                  )}
                </div>
              </div>
            </Col>
          </Row>
        </Card>

        {/* –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <Card
          title="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞"
          style={{ marginBottom: '20px', borderRadius: '8px' }}
          size="small"
        >
          <Row gutter={[16, 16]}>
            <Col span={6}>
              <Statistic
                title="–î–Ω–µ–≤–Ω–∞—è —Å–º–µ–Ω–∞"
                value={correctedData.dayShiftQuantity}
                suffix="—à—Ç"
                prefix="‚òÄÔ∏è"
              />
              {correctedData.dayShiftOperator && (
                <Text type="secondary" style={{ fontSize: '12px' }}>
                  {correctedData.dayShiftOperator}
                </Text>
              )}
            </Col>
            <Col span={6}>
              <Statistic
                title="–ù–æ—á–Ω–∞—è —Å–º–µ–Ω–∞"
                value={correctedData.nightShiftQuantity}
                suffix="—à—Ç"
                prefix="üåô"
              />
              {correctedData.nightShiftOperator && (
                <Text type="secondary" style={{ fontSize: '12px' }}>
                  {correctedData.nightShiftOperator}
                </Text>
              )}
            </Col>
            <Col span={6}>
              <Statistic
                title="–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å"
                value={efficiency}
                suffix="%"
                prefix="‚ö°"
                valueStyle={{ 
                  color: efficiency >= 100 ? '#3f8600' : efficiency >= 80 ? '#faad14' : '#ff4d4f'
                }}
              />
            </Col>
            <Col span={6}>
              <Statistic
                title="–°–∫–æ—Ä–æ—Å—Ç—å"
                value={productionRate}
                suffix="—à—Ç/—á"
                prefix="üöÄ"
              />
            </Col>
          </Row>

          <Divider />

          <Row gutter={[16, 8]}>
            <Col span={12}>
              <Text type="secondary">‚è±Ô∏è –ü–ª–∞–Ω–æ–≤–æ–µ –≤—Ä–µ–º—è: {correctedData.estimatedTime} –º–∏–Ω</Text>
            </Col>
            <Col span={12}>
              <Text type="secondary">
                ‚è∞ –§–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –≤—Ä–µ–º—è: {correctedData.actualTime || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'} –º–∏–Ω
              </Text>
            </Col>
            <Col span={12}>
              <Text type="secondary">
                üïê –ù–∞—á–∞—Ç–æ: {new Date(correctedData.startedAt).toLocaleString('ru-RU')}
              </Text>
            </Col>
            <Col span={12}>
              <Text type="secondary">
                ‚úÖ {isTargetReached ? '–ó–∞–≤–µ—Ä—à–µ–Ω–æ' : '–û–±–Ω–æ–≤–ª–µ–Ω–æ'}: {new Date(correctedData.completedAt).toLocaleString('ru-RU')}
              </Text>
            </Col>
          </Row>
        </Card>

        {/* –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
        {isOverproduced && (
          <Alert
            message="–ü–µ—Ä–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∞"
            description={`–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–æ –Ω–∞ ${correctedData.completedQuantity - correctedData.targetQuantity} –¥–µ—Ç–∞–ª–µ–π –±–æ–ª—å—à–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ.`}
            type="info"
            showIcon
            style={{ marginBottom: '20px' }}
          />
        )}

        {efficiency < 80 && (
          <Alert
            message="–ù–∏–∑–∫–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å"
            description="–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏—á–∏–Ω—ã —Å–Ω–∏–∂–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏."
            type="warning"
            showIcon
            style={{ marginBottom: '20px' }}
          />
        )}

        {!isTargetReached && (
          <Alert
            message="–û–ø–µ—Ä–∞—Ü–∏—è –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
            description={`–û—Å—Ç–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å: ${correctedData.targetQuantity - correctedData.completedQuantity} –¥–µ—Ç–∞–ª–µ–π –¥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–ª–∞–Ω–æ–≤–æ–π —Ü–µ–ª–∏.`}
            type="info"
            showIcon
            style={{ marginBottom: '20px' }}
          />
        )}

        {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
        <Card
          title={
            <Space>
              <SettingOutlined />
              {isTargetReached ? "üéØ –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–∏–µ –¥–µ–π—Å—Ç–≤–∏—è" : "‚ö° –û–ø–µ—Ä–∞—Ü–∏—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ. –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:"}
            </Space>
          }
          style={{ borderRadius: '8px' }}
        >
          <Row gutter={[16, 16]}>
            {isTargetReached && (
              <Col span={8}>
                <Card
                  hoverable
                  style={{
                    textAlign: 'center',
                    borderColor: '#52c41a',
                    backgroundColor: '#f6ffed',
                  }}
                  onClick={() => {
                    console.log('‚úÖ –ó–∞–∫—Ä—ã—Ç–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏:', {
                      targetQuantity: correctedData.targetQuantity,
                      completedQuantity: correctedData.completedQuantity,
                      isDataValid
                    });
                    onCloseOperation();
                  }}
                >
                  <CheckCircleOutlined
                    style={{ fontSize: '32px', color: '#52c41a', marginBottom: '12px' }}
                  />
                  <Title level={4} style={{ color: '#52c41a', margin: '8px 0' }}>
                    –ó–∞–∫—Ä—ã—Ç—å
                  </Title>
                  <Text type="secondary" style={{ fontSize: '12px' }}>
                    –ó–∞–≤–µ—Ä—à–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é, —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –ë–î –∏ –æ—Å–≤–æ–±–æ–¥–∏—Ç—å —Å—Ç–∞–Ω–æ–∫
                  </Text>
                </Card>
              </Col>
            )}
            
            <Col span={isTargetReached ? 8 : 12}>
              <Card
                hoverable
                style={{
                  textAlign: 'center',
                  borderColor: '#faad14',
                  backgroundColor: '#fffbe6',
                }}
                onClick={() => {
                  console.log('üîÑ –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏:', correctedData);
                  onContinueOperation();
                }}
              >
                <PlayCircleOutlined
                  style={{ fontSize: '32px', color: '#faad14', marginBottom: '12px' }}
                />
                <Title level={4} style={{ color: '#faad14', margin: '8px 0' }}>
                  –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
                </Title>
                <Text type="secondary" style={{ fontSize: '12px' }}>
                  {isTargetReached 
                    ? "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É –Ω–∞–¥ –æ–ø–µ—Ä–∞—Ü–∏–µ–π, –Ω–∞–∫–∞–ø–ª–∏–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç"
                    : "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–ª–∞–Ω–æ–≤–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞"
                  }
                </Text>
              </Card>
            </Col>
            
            <Col span={isTargetReached ? 8 : 12}>
              <Card
                hoverable
                style={{
                  textAlign: 'center',
                  borderColor: '#1890ff',
                  backgroundColor: '#f0f9ff',
                }}
                onClick={() => {
                  console.log('üìã –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏:', correctedData);
                  onPlanNewOperation();
                }}
              >
                <SettingOutlined
                  style={{ fontSize: '32px', color: '#1890ff', marginBottom: '12px' }}
                />
                <Title level={4} style={{ color: '#1890ff', margin: '8px 0' }}>
                  –°–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å
                </Title>
                <Text type="secondary" style={{ fontSize: '12px' }}>
                  {isTargetReached 
                    ? "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—É—é –æ–ø–µ—Ä–∞—Ü–∏—é"
                    : "–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ–∫—É—â—É—é –∏ –Ω–∞–∑–Ω–∞—á–∏—Ç—å —Å–ª–µ–¥—É—é—â—É—é –æ–ø–µ—Ä–∞—Ü–∏—é"
                  }
                </Text>
              </Card>
            </Col>
          </Row>

          <Divider />

          <div style={{ textAlign: 'center' }}>
            <Space>
              <Button onClick={onClose} size="large">
                –û—Ç–º–µ–Ω–∞
              </Button>
              <Text type="secondary" style={{ fontSize: '12px', marginLeft: '16px' }}>
                –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –≤—ã—à–µ –∏–ª–∏ –∑–∞–∫—Ä–æ–π—Ç–µ —ç—Ç–æ –æ–∫–Ω–æ
              </Text>
            </Space>
          </div>
        </Card>

        {/* –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <Card 
          size="small" 
          title="üîç –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è" 
          style={{ marginTop: 16, borderRadius: '8px', backgroundColor: '#fafafa' }}
        >
          <div style={{ fontSize: '12px', color: '#666' }}>
            <Row gutter={[16, 8]}>
              <Col span={12}>
                <Text strong>–ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:</Text>
                <ul style={{ marginTop: 4, marginBottom: 0 }}>
                  <li>–¶–µ–ª—å: {completedOperation.targetQuantity} –¥–µ—Ç–∞–ª–µ–π</li>
                  <li>–í—ã–ø–æ–ª–Ω–µ–Ω–æ (–ë–î): {completedOperation.completedQuantity} –¥–µ—Ç–∞–ª–µ–π</li>
                  <li>–ü—Ä–æ–≥—Ä–µ—Å—Å (–ë–î): {completedOperation.progressPercentage}%</li>
                </ul>
              </Col>
              <Col span={12}>
                <Text strong>–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:</Text>
                <ul style={{ marginTop: 4, marginBottom: 0 }}>
                  <li>–í—ã–ø–æ–ª–Ω–µ–Ω–æ (—Ä–µ–∞–ª—å–Ω–æ–µ): {correctedData.completedQuantity} –¥–µ—Ç–∞–ª–µ–π</li>
                  <li>–ü—Ä–æ–≥—Ä–µ—Å—Å (—Ä–µ–∞–ª—å–Ω—ã–π): {correctedData.progressPercentage}%</li>
                  <li>–°—Ç–∞—Ç—É—Å: {isTargetReached ? '–¶–µ–ª—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞' : '–í –ø—Ä–æ—Ü–µ—Å—Å–µ'}</li>
                </ul>
              </Col>
            </Row>
            <Divider style={{ margin: '8px 0' }} />
            <Text>
              <strong>–§–æ—Ä–º—É–ª–∞:</strong> –î–µ–Ω—å ({correctedData.dayShiftQuantity}) + –ù–æ—á—å ({correctedData.nightShiftQuantity}) = {correctedData.completedQuantity} –¥–µ—Ç–∞–ª–µ–π
            </Text>
          </div>
        </Card>
      </div>
    </Modal>
  );
};

export { OperationCompletionModal };
export default OperationCompletionModal;
