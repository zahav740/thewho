/**
 * @file: OperationCompletionModal.tsx
 * @description: –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ç—Ä–µ–º—è –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –¥–µ–π—Å—Ç–≤–∏–π
 * @dependencies: antd, react-query
 * @created: 2025-06-12
 */
import React from 'react';
import {
  Modal,
  Button,
  Space,
  Typography,
  Card,
  Row,
  Col,
  Statistic,
  Progress,
  Tag,
  Divider,
  Alert,
} from 'antd';
import {
  CheckCircleOutlined,
  PlayCircleOutlined,
  SettingOutlined,
  WarningOutlined,
  TrophyOutlined,
} from '@ant-design/icons';
import { useTranslation } from '../../i18n';

const { Title, Text } = Typography;

interface CompletedOperation {
  id: string;
  operationNumber: number;
  operationType: string;
  orderDrawingNumber: string;
  machineName: string;
  machineType: string;
  targetQuantity: number;
  completedQuantity: number;
  progressPercentage: number;
  estimatedTime: number;
  actualTime?: number;
  dayShiftQuantity: number;
  nightShiftQuantity: number;
  dayShiftOperator?: string;
  nightShiftOperator?: string;
  startedAt: string;
  completedAt: string;
}

export interface OperationCompletionModalProps {
  visible: boolean;
  completedOperation: CompletedOperation | null;
  onClose: () => void;
  onCloseOperation: () => void;
  onContinueOperation: () => void;
  onPlanNewOperation: () => void;
  loading?: boolean;
}

export const OperationCompletionModal: React.FC<OperationCompletionModalProps> = ({
  visible,
  completedOperation,
  onClose,
  onCloseOperation,
  onContinueOperation,
  onPlanNewOperation,
  loading = false,
}) => {
  const { t } = useTranslation();

  if (!completedOperation) return null;

  const efficiency = completedOperation.actualTime && completedOperation.estimatedTime
    ? Math.round((completedOperation.estimatedTime / completedOperation.actualTime) * 100)
    : 100;

  const isOverproduced = completedOperation.completedQuantity > completedOperation.targetQuantity;
  const productionRate = completedOperation.actualTime 
    ? Math.round((completedOperation.completedQuantity / (completedOperation.actualTime / 60)) * 100) / 100
    : 0;

  return (
    <Modal
      title={
        <Space>
          <TrophyOutlined style={{ color: '#52c41a', fontSize: '24px' }} />
          <Title level={3} style={{ margin: 0, color: '#52c41a' }}>
            üéâ –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!
          </Title>
        </Space>
      }
      open={visible}
      onCancel={onClose}
      width={800}
      footer={null}
      centered
      style={{ borderRadius: '12px' }}
      className="operation-completion-modal"
    >
      <div style={{ padding: '20px 0' }}>
        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–ø–µ—Ä–∞—Ü–∏–∏ */}
        <Card
          style={{
            marginBottom: '20px',
            backgroundColor: '#f6ffed',
            borderColor: '#b7eb8f',
            borderRadius: '8px',
          }}
        >
          <Row gutter={[16, 16]} align="middle">
            <Col span={12}>
              <Space direction="vertical" size={4}>
                <Text strong style={{ fontSize: '16px' }}>
                  –û–ø–µ—Ä–∞—Ü–∏—è #{completedOperation.operationNumber}
                </Text>
                <Text type="secondary">
                  üìÑ {completedOperation.orderDrawingNumber}
                </Text>
                <Text type="secondary">
                  üè≠ {completedOperation.machineName} ({completedOperation.machineType})
                </Text>
                <Text type="secondary">
                  üîß {completedOperation.operationType}
                </Text>
              </Space>
            </Col>
            <Col span={12}>
              <div style={{ textAlign: 'center' }}>
                <Progress
                  type="circle"
                  percent={Math.min(completedOperation.progressPercentage, 100)}
                  size={100}
                  status={isOverproduced ? 'success' : 'active'}
                  strokeColor={isOverproduced ? '#52c41a' : '#1890ff'}
                />
                <div style={{ marginTop: '8px' }}>
                  <Text strong style={{ fontSize: '14px' }}>
                    {completedOperation.completedQuantity} / {completedOperation.targetQuantity}
                  </Text>
                  <br />
                  <Text type="secondary" style={{ fontSize: '12px' }}>
                    –¥–µ—Ç–∞–ª–µ–π –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
                  </Text>
                </div>
              </div>
            </Col>
          </Row>
        </Card>

        {/* –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <Card
          title="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞"
          style={{ marginBottom: '20px', borderRadius: '8px' }}
          size="small"
        >
          <Row gutter={[16, 16]}>
            <Col span={6}>
              <Statistic
                title="–î–Ω–µ–≤–Ω–∞—è —Å–º–µ–Ω–∞"
                value={completedOperation.dayShiftQuantity}
                suffix="—à—Ç"
                prefix="‚òÄÔ∏è"
              />
              {completedOperation.dayShiftOperator && (
                <Text type="secondary" style={{ fontSize: '12px' }}>
                  {completedOperation.dayShiftOperator}
                </Text>
              )}
            </Col>
            <Col span={6}>
              <Statistic
                title="–ù–æ—á–Ω–∞—è —Å–º–µ–Ω–∞"
                value={completedOperation.nightShiftQuantity}
                suffix="—à—Ç"
                prefix="üåô"
              />
              {completedOperation.nightShiftOperator && (
                <Text type="secondary" style={{ fontSize: '12px' }}>
                  {completedOperation.nightShiftOperator}
                </Text>
              )}
            </Col>
            <Col span={6}>
              <Statistic
                title="–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å"
                value={efficiency}
                suffix="%"
                prefix="‚ö°"
                valueStyle={{ 
                  color: efficiency >= 100 ? '#3f8600' : efficiency >= 80 ? '#faad14' : '#ff4d4f'
                }}
              />
            </Col>
            <Col span={6}>
              <Statistic
                title="–°–∫–æ—Ä–æ—Å—Ç—å"
                value={productionRate}
                suffix="—à—Ç/—á"
                prefix="üöÄ"
              />
            </Col>
          </Row>

          <Divider />

          <Row gutter={[16, 8]}>
            <Col span={12}>
              <Text type="secondary">‚è±Ô∏è –ü–ª–∞–Ω–æ–≤–æ–µ –≤—Ä–µ–º—è: {completedOperation.estimatedTime} –º–∏–Ω</Text>
            </Col>
            <Col span={12}>
              <Text type="secondary">
                ‚è∞ –§–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –≤—Ä–µ–º—è: {completedOperation.actualTime || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'} –º–∏–Ω
              </Text>
            </Col>
            <Col span={12}>
              <Text type="secondary">
                üïê –ù–∞—á–∞—Ç–æ: {new Date(completedOperation.startedAt).toLocaleString('ru-RU')}
              </Text>
            </Col>
            <Col span={12}>
              <Text type="secondary">
                ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ: {new Date(completedOperation.completedAt).toLocaleString('ru-RU')}
              </Text>
            </Col>
          </Row>
        </Card>

        {/* –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
        {isOverproduced && (
          <Alert
            message="–ü–µ—Ä–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∞"
            description={`–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–æ –Ω–∞ ${completedOperation.completedQuantity - completedOperation.targetQuantity} –¥–µ—Ç–∞–ª–µ–π –±–æ–ª—å—à–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ.`}
            type="info"
            showIcon
            style={{ marginBottom: '20px' }}
          />
        )}

        {efficiency < 80 && (
          <Alert
            message="–ù–∏–∑–∫–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å"
            description="–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏—á–∏–Ω—ã —Å–Ω–∏–∂–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏."
            type="warning"
            showIcon
            style={{ marginBottom: '20px' }}
          />
        )}

        {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
        <Card
          title="üéØ –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–∏–µ –¥–µ–π—Å—Ç–≤–∏—è"
          style={{ borderRadius: '8px' }}
        >
          <Row gutter={[16, 16]}>
            <Col span={8}>
              <Card
                hoverable
                style={{
                  textAlign: 'center',
                  borderColor: '#52c41a',
                  backgroundColor: '#f6ffed',
                }}
                onClick={onCloseOperation}
              >
                <CheckCircleOutlined
                  style={{ fontSize: '32px', color: '#52c41a', marginBottom: '12px' }}
                />
                <Title level={4} style={{ color: '#52c41a', margin: '8px 0' }}>
                  –ó–∞–∫—Ä—ã—Ç—å
                </Title>
                <Text type="secondary" style={{ fontSize: '12px' }}>
                  –ó–∞–≤–µ—Ä—à–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é, —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –ë–î –∏ –æ—Å–≤–æ–±–æ–¥–∏—Ç—å —Å—Ç–∞–Ω–æ–∫
                </Text>
              </Card>
            </Col>
            
            <Col span={8}>
              <Card
                hoverable
                style={{
                  textAlign: 'center',
                  borderColor: '#faad14',
                  backgroundColor: '#fffbe6',
                }}
                onClick={onContinueOperation}
              >
                <PlayCircleOutlined
                  style={{ fontSize: '32px', color: '#faad14', marginBottom: '12px' }}
                />
                <Title level={4} style={{ color: '#faad14', margin: '8px 0' }}>
                  –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
                </Title>
                <Text type="secondary" style={{ fontSize: '12px' }}>
                  –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É –Ω–∞–¥ –æ–ø–µ—Ä–∞—Ü–∏–µ–π, –Ω–∞–∫–∞–ø–ª–∏–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                </Text>
              </Card>
            </Col>
            
            <Col span={8}>
              <Card
                hoverable
                style={{
                  textAlign: 'center',
                  borderColor: '#1890ff',
                  backgroundColor: '#f0f9ff',
                }}
                onClick={onPlanNewOperation}
              >
                <SettingOutlined
                  style={{ fontSize: '32px', color: '#1890ff', marginBottom: '12px' }}
                />
                <Title level={4} style={{ color: '#1890ff', margin: '8px 0' }}>
                  –°–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å
                </Title>
                <Text type="secondary" style={{ fontSize: '12px' }}>
                  –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—É—é –æ–ø–µ—Ä–∞—Ü–∏—é
                </Text>
              </Card>
            </Col>
          </Row>

          <Divider />

          <div style={{ textAlign: 'center' }}>
            <Space>
              <Button onClick={onClose} size="large">
                –û—Ç–º–µ–Ω–∞
              </Button>
              <Text type="secondary" style={{ fontSize: '12px', marginLeft: '16px' }}>
                –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –≤—ã—à–µ –∏–ª–∏ –∑–∞–∫—Ä–æ–π—Ç–µ —ç—Ç–æ –æ–∫–Ω–æ
              </Text>
            </Space>
          </div>
        </Card>
      </div>
    </Modal>
  );
};

export default OperationCompletionModal;
