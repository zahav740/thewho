import { useState, useEffect } from 'react';

const USERNAME_HISTORY_KEY = 'usernameHistory';
const MAX_HISTORY_SIZE = 10;

interface UseUsernameHistoryReturn {
  usernameHistory: string[];
  saveUsername: (username: string) => void;
  clearHistory: () => void;
  removeUsername: (username: string) => void;
}

export const useUsernameHistory = (): UseUsernameHistoryReturn => {
  const [usernameHistory, setUsernameHistory] = useState<string[]>([]);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  useEffect(() => {
    const savedUsernames = localStorage.getItem(USERNAME_HISTORY_KEY);
    if (savedUsernames) {
      try {
        const usernames = JSON.parse(savedUsernames);
        if (Array.isArray(usernames)) {
          setUsernameHistory(usernames);
          console.log('üìö –ó–∞–≥—Ä—É–∂–µ–Ω–∞ –∏—Å—Ç–æ—Ä–∏—è usernames:', usernames.length, '–∑–∞–ø–∏—Å–µ–π');
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏ usernames:', error);
        localStorage.removeItem(USERNAME_HISTORY_KEY);
      }
    }
  }, []);

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º username –≤ –∏—Å—Ç–æ—Ä–∏—é
  const saveUsername = (username: string) => {
    if (!username || typeof username !== 'string' || username.trim().length < 2) {
      return;
    }

    const trimmedUsername = username.trim();
    
    setUsernameHistory(currentHistory => {
      // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç –µ—Å–ª–∏ –µ—Å—Ç—å
      let newHistory = currentHistory.filter(u => u !== trimmedUsername);
      
      // –î–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ
      newHistory.unshift(trimmedUsername);
      
      // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä
      newHistory = newHistory.slice(0, MAX_HISTORY_SIZE);
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
      localStorage.setItem(USERNAME_HISTORY_KEY, JSON.stringify(newHistory));
      
      console.log('üìù Username —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –∏—Å—Ç–æ—Ä–∏—é:', trimmedUsername);
      return newHistory;
    });
  };

  // –û—á–∏—â–∞–µ–º –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é
  const clearHistory = () => {
    setUsernameHistory([]);
    localStorage.removeItem(USERNAME_HISTORY_KEY);
    console.log('üóëÔ∏è –ò—Å—Ç–æ—Ä–∏—è usernames –æ—á–∏—â–µ–Ω–∞');
  };

  // –£–¥–∞–ª—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π username –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏
  const removeUsername = (username: string) => {
    setUsernameHistory(currentHistory => {
      const newHistory = currentHistory.filter(u => u !== username);
      localStorage.setItem(USERNAME_HISTORY_KEY, JSON.stringify(newHistory));
      console.log('üóëÔ∏è Username —É–¥–∞–ª–µ–Ω –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏:', username);
      return newHistory;
    });
  };

  return {
    usernameHistory,
    saveUsername,
    clearHistory,
    removeUsername
  };
};
