/**
 * @file: DataDiagnostics.tsx
 * @description: –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –¥–∞–Ω–Ω—ã—Ö –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
 */
import React from 'react';
import { Card, Typography, Divider, Tag, Space } from 'antd';
import { useQuery } from '@tanstack/react-query';
import { machinesApi } from '../../../services/machinesApi';
import { shiftsApi } from '../../../services/shiftsApi';
import dayjs from 'dayjs';

const { Title, Text, Paragraph } = Typography;

export const DataDiagnostics: React.FC = () => {
  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞–Ω–∫–æ–≤
  const { data: machines } = useQuery({
    queryKey: ['machines'],
    queryFn: machinesApi.getAll,
  });

  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–º–µ–Ω –∑–∞ —Å–µ–≥–æ–¥–Ω—è
  const { data: todayShifts } = useQuery({
    queryKey: ['shifts', 'today'],
    queryFn: () => shiftsApi.getAll({
      startDate: dayjs().format('YYYY-MM-DD'),
      endDate: dayjs().format('YYYY-MM-DD'),
    }),
  });

  return (
    <Card title="üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞" style={{ margin: '16px 0' }}>
      <Space direction="vertical" style={{ width: '100%' }}>
        
        {/* –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å—Ç–∞–Ω–∫–æ–≤ */}
        <div>
          <Title level={5}>üìü –î–∞–Ω–Ω—ã–µ —Å—Ç–∞–Ω–∫–æ–≤:</Title>
          {machines ? (
            <div>
              <Text>–í—Å–µ–≥–æ —Å—Ç–∞–Ω–∫–æ–≤: <Tag color="blue">{machines.length}</Tag></Text>
              <br />
              <Text>–°—Ç–∞–Ω–∫–∏ —Å –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏: <Tag color="green">
                {machines.filter(m => m.currentOperationDetails).length}
              </Tag></Text>
              <Divider style={{ margin: '8px 0' }} />
              {machines.slice(0, 3).map(machine => (
                <div key={machine.id} style={{ marginBottom: '8px', padding: '8px', backgroundColor: '#f5f5f5', borderRadius: '4px' }}>
                  <Text strong>{machine.machineName}</Text>
                  <br />
                  <Text>ID: {machine.id}</Text>
                  <br />
                  <Text>–û–ø–µ—Ä–∞—Ü–∏—è: {machine.currentOperationDetails ? 
                    `${machine.currentOperationDetails.operationNumber} (${machine.currentOperationDetails.orderDrawingNumber})` : 
                    '–ù–µ—Ç'
                  }</Text>
                </div>
              ))}
            </div>
          ) : (
            <Text type="danger">–î–∞–Ω–Ω—ã–µ —Å—Ç–∞–Ω–∫–æ–≤ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã</Text>
          )}
        </div>

        <Divider />

        {/* –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–º–µ–Ω */}
        <div>
          <Title level={5}>üìä –î–∞–Ω–Ω—ã–µ —Å–º–µ–Ω –∑–∞ —Å–µ–≥–æ–¥–Ω—è:</Title>
          {todayShifts ? (
            <div>
              <Text>–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π —Å–º–µ–Ω: <Tag color="orange">{todayShifts.length}</Tag></Text>
              <br />
              <Text>–î–∞—Ç–∞ –ø–æ–∏—Å–∫–∞: <Tag>{dayjs().format('YYYY-MM-DD')}</Tag></Text>
              <Divider style={{ margin: '8px 0' }} />
              {todayShifts.slice(0, 3).map(shift => (
                <div key={shift.id} style={{ marginBottom: '8px', padding: '8px', backgroundColor: '#f0f9ff', borderRadius: '4px' }}>
                  <Text strong>–°–º–µ–Ω–∞ #{shift.id}</Text>
                  <br />
                  <Text>–°—Ç–∞–Ω–æ–∫ ID: {shift.machineId}</Text>
                  <br />
                  <Text>–ß–µ—Ä—Ç–µ–∂: {shift.drawingNumber || shift.orderDrawingNumber || '–ù–µ —É–∫–∞–∑–∞–Ω'}</Text>
                  <br />
                  <Text>–î–µ–Ω—å: {shift.dayShiftQuantity || 0} –¥–µ—Ç–∞–ª–µ–π (–æ–ø–µ—Ä–∞—Ç–æ—Ä: {shift.dayShiftOperator || '-'})</Text>
                  <br />
                  <Text>–ù–æ—á—å: {shift.nightShiftQuantity || 0} –¥–µ—Ç–∞–ª–µ–π (–æ–ø–µ—Ä–∞—Ç–æ—Ä: {shift.nightShiftOperator || '-'})</Text>
                  <br />
                  <Text>–î–∞—Ç–∞: {shift.date}</Text>
                </div>
              ))}
              {todayShifts.length > 3 && (
                <Text type="secondary">... –∏ –µ—â–µ {todayShifts.length - 3} –∑–∞–ø–∏—Å–µ–π</Text>
              )}
            </div>
          ) : (
            <Text type="danger">–î–∞–Ω–Ω—ã–µ —Å–º–µ–Ω –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã</Text>
          )}
        </div>

        <Divider />

        {/* –°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö */}
        <div>
          <Title level={5}>üîó –°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö:</Title>
          {machines && todayShifts ? (
            machines.filter(m => m.currentOperationDetails).map(machine => {
              const machineShifts = todayShifts.filter(shift => 
                shift.machineId === parseInt(machine.id)
              );
              
              const operationShifts = todayShifts.filter(shift => {
                const drawingNumber = shift.drawingNumber || shift.orderDrawingNumber;
                return shift.machineId === parseInt(machine.id) && 
                       drawingNumber === machine.currentOperationDetails?.orderDrawingNumber;
              });

              return (
                <div key={machine.id} style={{ marginBottom: '12px', padding: '12px', backgroundColor: '#fff7e6', borderRadius: '4px', border: '1px solid #faad14' }}>
                  <Text strong style={{ color: '#d46b08' }}>{machine.machineName}</Text>
                  <br />
                  <Text>–¢–µ–∫—É—â–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è: {machine.currentOperationDetails?.orderDrawingNumber}</Text>
                  <br />
                  <Text>–í—Å–µ—Ö —Å–º–µ–Ω –¥–ª—è —Å—Ç–∞–Ω–∫–∞: <Tag color="blue">{machineShifts.length}</Tag></Text>
                  <br />
                  <Text>–°–º–µ–Ω –¥–ª—è —Ç–µ–∫—É—â–µ–π –æ–ø–µ—Ä–∞—Ü–∏–∏: <Tag color={operationShifts.length > 0 ? 'green' : 'red'}>{operationShifts.length}</Tag></Text>
                  
                  {operationShifts.length > 0 && (
                    <div style={{ marginTop: '8px' }}>
                      <Text strong>–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –ø–æ –æ–ø–µ—Ä–∞—Ü–∏–∏:</Text>
                      <br />
                      {operationShifts.map(shift => (
                        <div key={shift.id} style={{ marginLeft: '16px' }}>
                          <Text>–î–µ–Ω—å: {shift.dayShiftQuantity || 0}, –ù–æ—á—å: {shift.nightShiftQuantity || 0}</Text>
                        </div>
                      ))}
                      <br />
                      <Text strong style={{ color: '#1890ff' }}>
                        –û–±—â–∏–π –æ–±—ä–µ–º: {operationShifts.reduce((sum, shift) => 
                          sum + (shift.dayShiftQuantity || 0) + (shift.nightShiftQuantity || 0), 0
                        )} –¥–µ—Ç–∞–ª–µ–π
                      </Text>
                    </div>
                  )}

                  {operationShifts.length === 0 && machineShifts.length > 0 && (
                    <div style={{ marginTop: '8px', color: '#ff4d4f' }}>
                      <Text>‚ö†Ô∏è –°—Ç–∞–Ω–æ–∫ –∏–º–µ–µ—Ç —Å–º–µ–Ω—ã, –Ω–æ –æ–Ω–∏ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ç–µ–∫—É—â–µ–π –æ–ø–µ—Ä–∞—Ü–∏–∏</Text>
                      <br />
                      <Text>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —á–µ—Ä—Ç–µ–∂–µ–π</Text>
                    </div>
                  )}
                </div>
              );
            })
          ) : (
            <Text>–û–∂–∏–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è...</Text>
          )}
        </div>
      </Space>
    </Card>
  );
};

export default DataDiagnostics;
