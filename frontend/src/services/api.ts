/**
 * @file: api.ts
 * @description: –ë–∞–∑–æ–≤–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ API –∫–ª–∏–µ–Ω—Ç–∞
 * @dependencies: axios
 * @created: 2025-01-28
 * @updated: 2025-06-01 // –î–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–∞–¥–µ–∂–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π
 */
import axios from 'axios';
import { formatOrderData } from '../utils/operation-formatter';

const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5101/api';

export const api = axios.create({
  baseURL: API_BASE_URL,
  headers: {
    'Content-Type': 'application/json',
  },
  withCredentials: false, // –û—Ç–∫–ª—é—á–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É cookies –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
  timeout: 10000, // 10 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
});

// Interceptor –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
api.interceptors.request.use(
  (config) => {
    if (config.method === 'put' || config.method === 'post') {
      console.log('üîç API REQUEST:', {
        url: config.url,
        method: config.method.toUpperCase(),
        data: config.data,
        headers: config.headers,
      });
      
      // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ —ç—Ç–æ –æ–±—ä–µ–∫—Ç
      if (config.data && typeof config.data === 'object' && !(config.data instanceof FormData)) {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä –¥–ª—è –ø—Ä–∏–≤–µ–¥–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∫ –Ω—É–∂–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É
        const formattedData = formatOrderData(config.data);
        config.data = formattedData;
        
        console.log('üîÑ –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', config.data);
      }
    }
    return config;
  },
  (error) => {
    console.error('‚ùå API REQUEST ERROR:', error);
    return Promise.reject(error);
  }
);

// Interceptor –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–æ–≤
api.interceptors.response.use(
  (response) => {
    console.log('‚úÖ API RESPONSE:', {
      status: response.status,
      url: response.config.url,
      method: response.config.method?.toUpperCase(),
      data: response.data,
    });
    return response;
  },
  (error) => {
    if (error.response) {
      // –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—Ç–∏–ª —Å –æ—à–∏–±–∫–æ–π
      console.error('‚ùå API ERROR:', {
        status: error.response.status,
        url: error.config.url,
        method: error.config.method?.toUpperCase(),
        data: error.response.data,
        requestData: error.config.data,
      });
      
      // –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å —Å –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –æ—à–∏–±–∫–µ 400 –∏–ª–∏ 500
      if (
        (error.response.status === 400 || error.response.status === 500) && 
        error.config && 
        !error.config.__isRetryRequest &&
        (error.config.method === 'put' || error.config.method === 'post') &&
        typeof error.config.data === 'object'
      ) {
        console.log('‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å —Å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º –¥–∞–Ω–Ω—ã—Ö...');
        
        try {
          // –ö–ª–æ–Ω–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
          const newConfig = { ...error.config };
          newConfig.__isRetryRequest = true;
          
          // –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞
          const originalData = JSON.parse(newConfig.data);
          
          // –ü—Ä–∏–º–µ–Ω—è–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
          if (originalData.operations && Array.isArray(originalData.operations)) {
            originalData.operations = originalData.operations.map((op: any) => ({
              ...op,
              // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤—Å–µ —á–∏—Å–ª–æ–≤—ã–µ –ø–æ–ª—è –≤ —Å—Ç—Ä–æ–∫–∏
              operationNumber: String(op.operationNumber),
              machineAxes: typeof op.machineAxes === 'number' ? `${op.machineAxes}-axis` : op.machineAxes,
              estimatedTime: String(op.estimatedTime)
            }));
          }
          
          // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º priority –≤ —Å—Ç—Ä–æ–∫—É
          if (originalData.priority !== undefined) {
            originalData.priority = String(originalData.priority);
          }
          
          // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞
          newConfig.data = JSON.stringify(originalData);
          
          console.log('üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —Å –¥–∞–Ω–Ω—ã–º–∏:', newConfig.data);
          
          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –ø–æ–≤—Ç–æ—Ä–Ω–æ
          return axios(newConfig);
        } catch (retryError) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å:', retryError);
        }
      }
    } else if (error.request) {
      // –ó–∞–ø—Ä–æ—Å –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, –Ω–æ –æ—Ç–≤–µ—Ç–∞ –Ω–µ –ø–æ–ª—É—á–µ–Ω–æ
      console.error('‚ùå NETWORK ERROR:', error.request);
    } else {
      // –ß—Ç–æ-—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∑–∞–ø—Ä–æ—Å–∞
      console.error('‚ùå ERROR:', error.message);
    }
    return Promise.reject(error);
  }
);

export default api;
