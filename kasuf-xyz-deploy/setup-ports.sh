#!/bin/bash

echo "============================================"
echo "üîß –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê –ü–û–†–¢–û–í BEGET"
echo "============================================"
echo "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–æ—Ä—Ç—ã –¥–ª—è production:"
echo "Backend: 5200 | Frontend: 5201"
echo "============================================"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ
if [ ! -d "frontend" ] || [ ! -d "backend" ]; then
    echo "‚ùå –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ /var/upload/"
    echo "–¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"
    exit 1
fi

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
pm2 delete all 2>/dev/null || true

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Backend –¥–ª—è production
echo "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Backend (–ø–æ—Ä—Ç 5200)..."
cd backend

# –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π .env –¥–ª—è production
cat > .env << 'EOF'
# PRODUCTION BEGET
NODE_ENV=production
PORT=5200

# Supabase Database
DB_HOST=aws-0-eu-central-1.pooler.supabase.com
DB_PORT=6543
DB_USERNAME=postgres.kukqacmzfmzepdfddppl
DB_PASSWORD=Magarel1!
DB_NAME=postgres
DATABASE_URL=postgresql://postgres.kukqacmzfmzepdfddppl:Magarel1!@aws-0-eu-central-1.pooler.supabase.com:6543/postgres

# CORS –¥–ª—è kasuf.xyz
CORS_ORIGIN=https://kasuf.xyz

# JWT
JWT_SECRET=YourSuperSecretJWTKeyForBeget256BitsLong!
JWT_EXPIRES_IN=7d

# TypeORM
TYPEORM_SYNCHRONIZE=false
TYPEORM_LOGGING=true

# –î—Ä—É–≥–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
LOG_LEVEL=info
SSL_ENABLED=true
MAX_FILE_SIZE=50MB
UPLOAD_PATH=/app/uploads
EOF

echo "‚úÖ Backend .env —Å–æ–∑–¥–∞–Ω (–ø–æ—Ä—Ç 5200)"
cd ..

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Frontend –¥–ª—è production  
echo "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Frontend (–ø–æ—Ä—Ç 5201)..."
cd frontend

# –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π .env –¥–ª—è production
cat > .env << 'EOF'
# PRODUCTION BEGET
PORT=5201
REACT_APP_API_URL=https://kasuf.xyz/api
REACT_APP_ENVIRONMENT=production
BROWSER=none
OPEN_BROWSER=false
EOF

echo "‚úÖ Frontend .env —Å–æ–∑–¥–∞–Ω (–ø–æ—Ä—Ç 5201)"
cd ..

# –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é PM2 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
echo "‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ PM2 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
cat > ecosystem.config.js << 'EOF'
module.exports = {
  apps: [
    {
      name: 'crm-backend',
      script: '/var/upload/backend/dist/main.js',
      cwd: '/var/upload/backend',
      env: {
        NODE_ENV: 'production',
        PORT: 5200
      },
      restart_delay: 5000,
      max_restarts: 10,
      error_file: '/var/log/pm2/crm-backend-error.log',
      out_file: '/var/log/pm2/crm-backend-out.log'
    },
    {
      name: 'crm-frontend',
      script: 'serve',
      args: '-s build -l 5201',
      cwd: '/var/upload/frontend',
      env: {
        NODE_ENV: 'production',
        PORT: 5201
      },
      restart_delay: 5000,
      max_restarts: 10,
      error_file: '/var/log/pm2/crm-frontend-error.log',
      out_file: '/var/log/pm2/crm-frontend-out.log'
    }
  ]
};
EOF

echo "‚úÖ PM2 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞"

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤
mkdir -p /var/log/pm2

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ serve –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ serve..."
which serve >/dev/null 2>&1 || npm install -g serve

# –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
echo "üî® –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏..."

if [ ! -d "backend/dist" ]; then
    echo "–°–±–æ—Ä–∫–∞ Backend..."
    cd backend
    npm run build
    cd ..
fi

if [ ! -d "frontend/build" ]; then
    echo "–°–±–æ—Ä–∫–∞ Frontend..."
    cd frontend
    NODE_ENV=production npm run build
    cd ..
fi

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
echo "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π..."
pm2 start ecosystem.config.js
pm2 save

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
pm2 startup >/dev/null 2>&1 || true

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞..."
sleep 3
pm2 status

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤..."
sleep 2

if curl -s http://localhost:5200/health >/dev/null 2>&1; then
    echo "‚úÖ Backend —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 5200"
else
    echo "‚ö†Ô∏è Backend –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5200"
fi

if curl -s http://localhost:5201 >/dev/null 2>&1; then
    echo "‚úÖ Frontend —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 5201"
else
    echo "‚ö†Ô∏è Frontend –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5201"
fi

echo ""
echo "============================================"
echo "‚úÖ –ù–ê–°–¢–†–û–ô–ö–ê –ü–û–†–¢–û–í –ó–ê–í–ï–†–®–ï–ù–ê!"
echo "============================================"
echo "üéØ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–æ—Ä—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã:"
echo "   Backend:  5200 (Supabase)"
echo "   Frontend: 5201 (kasuf.xyz API)"
echo ""
echo "üåê –î–æ—Å—Ç—É–ø:"
echo "   –°–∞–π—Ç:     https://kasuf.xyz"
echo "   API:      https://kasuf.xyz/api"
echo "   Health:   https://kasuf.xyz/health"
echo ""
echo "üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
echo "   pm2 status    - —Å—Ç–∞—Ç—É—Å"
echo "   pm2 logs      - –ª–æ–≥–∏"
echo "   pm2 restart all - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫"
echo ""
echo "‚ö†Ô∏è –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ Nginx –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—ã 5200/5201!"
echo ""
echo "üéâ –¢–µ–ø–µ—Ä—å –ø–æ—Ä—Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ!"