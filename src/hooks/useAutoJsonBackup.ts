import { useEffect, useRef } from 'react';
import { useApp } from '../context/AppContext';

interface AutoJsonBackupOptions {
  enabled?: boolean;
  intervalMinutes?: number;
  includeAllData?: boolean;
  storageKey?: string;
}

const defaultOptions: AutoJsonBackupOptions = {
  enabled: true,
  intervalMinutes: 5,
  includeAllData: false,
  storageKey: 'thewho_auto_backup'
};

export const useAutoJsonBackup = (options: AutoJsonBackupOptions = {}) => {
  const { orders, shifts, setups, operators } = useApp();
  const opts = { ...defaultOptions, ...options };
  const lastBackupRef = useRef<string>('');
  const lastLogTimeRef = useRef<number>(0);
  const intervalRef = useRef<NodeJS.Timeout | null>(null);

  const createBackup = () => {
    if (!opts.enabled) return;
    
    try {
      const backupData = opts.includeAllData 
        ? { orders, shifts, setups, operators }
        : { orders };

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
      const jsonString = JSON.stringify({
        ...backupData,
        backupDate: new Date().toISOString(),
        version: '1.0',
        type: opts.includeAllData ? 'full_auto_backup' : 'orders_auto_backup'
      }, null, 2);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä (–æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º 5MB)
      const sizeInMB = new Blob([jsonString]).size / (1024 * 1024);
      if (sizeInMB > 5) {
        console.warn(`‚ö†Ô∏è –ê–≤—Ç–æ–±—ç–∫–∞–ø —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π (${sizeInMB.toFixed(2)}MB). –ü—Ä–æ–ø—É—Å–∫–∞–µ–º.`);
        return;
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–∏—Å—å –ª–∏ –¥–∞–Ω–Ω—ã–µ —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –±—ç–∫–∞–ø–∞
      if (jsonString !== lastBackupRef.current) {
        try {
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ–µ –º–µ—Å—Ç–æ –≤ localStorage
          const testKey = 'localStorage_test';
          const testValue = 'test';
          
          try {
            localStorage.setItem(testKey, testValue);
            localStorage.removeItem(testKey);
          } catch (storageError) {
            // localStorage –∑–∞–ø–æ–ª–Ω–µ–Ω - –æ—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –±—ç–∫–∞–ø—ã
            console.warn('‚ö†Ô∏è localStorage –∑–∞–ø–æ–ª–Ω–µ–Ω. –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ...');
            clearOldBackups();
          }
          
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –∫–∞–∫ —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
          localStorage.setItem(opts.storageKey!, jsonString);
          lastBackupRef.current = jsonString;
          
          // –õ–æ–≥–∏—Ä—É–µ–º –Ω–µ —á–∞—â–µ —á–µ–º —Ä–∞–∑ –≤ 30 —Å–µ–∫—É–Ω–¥
          const now = Date.now();
          if (now - lastLogTimeRef.current > 30000) {
            console.log('‚úÖ –ê–≤—Ç–æ–±—ç–∫–∞–ø JSON —Å–æ–∑–¥–∞–Ω:', new Date().toLocaleString(), `(${sizeInMB.toFixed(2)}MB)`);
            lastLogTimeRef.current = now;
          }
        } catch (error) {
          if (error instanceof DOMException && error.name === 'QuotaExceededError') {
            console.warn('‚ö†Ô∏è –ö–≤–æ—Ç–∞ localStorage –ø—Ä–µ–≤—ã—à–µ–Ω–∞. –û—á–∏—â–∞–µ–º –∏ –ø—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞...');
            clearOldBackups();
            
            // –ü—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏
            try {
              localStorage.setItem(opts.storageKey!, jsonString);
              lastBackupRef.current = jsonString;
              console.log('‚úÖ –ê–≤—Ç–æ–±—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏');
            } catch (secondError) {
              console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∞–≤—Ç–æ–±—ç–∫–∞–ø –¥–∞–∂–µ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏:', secondError);
            }
          } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–≤—Ç–æ–±—ç–∫–∞–ø–∞:', error);
          }
        }
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Å–æ–∑–¥–∞–Ω–∏—è –∞–≤—Ç–æ–±—ç–∫–∞–ø–∞:', error);
    }
  };
  
  // –ú–µ—Ç–æ–¥ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage
  const clearOldBackups = () => {
    try {
      const keysToCheck = [
        'thewho_auto_backup',
        'orders',
        'shifts', 
        'setups',
        'operators',
        'planningResults',
        'planningAlerts'
      ];
      
      // –£–¥–∞–ª—è–µ–º –≤—Å–µ –∫–ª—é—á–∏ –∫—Ä–æ–º–µ —Ç–µ–∫—É—â–µ–≥–æ –∞–≤—Ç–æ–±—ç–∫–∞–ø–∞
      Object.keys(localStorage).forEach(key => {
        if (key !== opts.storageKey && (
            key.startsWith('thewho_') ||
            key.startsWith('backup_') ||
            keysToCheck.includes(key)
        )) {
          localStorage.removeItem(key);
        }
      });
      
      console.log('üßπ –û—á–∏—â–µ–Ω—ã —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ localStorage:', error);
    }
  };

  // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  useEffect(() => {
    if (!opts.enabled) return;

    createBackup(); // –ü–µ—Ä–≤—ã–π –±—ç–∫–∞–ø
    intervalRef.current = setInterval(createBackup, opts.intervalMinutes! * 60 * 1000);

    return () => {
      if (intervalRef.current) {
        clearInterval(intervalRef.current);
        intervalRef.current = null;
      }
    };
  }, [opts.enabled, opts.intervalMinutes]);

  // –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö (—Å –¥–µ–±–∞—É–Ω—Å–æ–º)
  useEffect(() => {
    const timeout = setTimeout(createBackup, 2000); // 2 —Å–µ–∫—É–Ω–¥—ã –∑–∞–¥–µ—Ä–∂–∫–∏
    return () => clearTimeout(timeout);
  }, [orders, shifts, setups, operators]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∞–≤—Ç–æ–±—ç–∫–∞–ø–∞
  const getLastBackup = (): string | null => {
    try {
      return localStorage.getItem(opts.storageKey!) || null;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–≤—Ç–æ–±—ç–∫–∞–ø–∞:', error);
      return null;
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ –∞–≤—Ç–æ–±—ç–∫–∞–ø–∞
  const restoreFromBackup = (): any | null => {
    try {
      const backup = getLastBackup();
      return backup ? JSON.parse(backup) : null;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ –∞–≤—Ç–æ–±—ç–∫–∞–ø–∞:', error);
      return null;
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∞–≤—Ç–æ–±—ç–∫–∞–ø–∞
  const downloadBackup = () => {
    try {
      const backup = getLastBackup();
      if (!backup) {
        alert('–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ–±—ç–∫–∞–ø–æ–≤');
        return;
      }

      const blob = new Blob([backup], { type: 'application/json' });
      const url = URL.createObjectURL(blob);
      
      const link = document.createElement('a');
      link.href = url;
      const timestamp = new Date().toISOString().slice(0, 16).replace(/[:]/g, '-');
      link.download = `thewho-auto-backup-${timestamp}.json`;
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
      URL.revokeObjectURL(url);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∞–≤—Ç–æ–±—ç–∫–∞–ø–∞:', error);
      alert('–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∞–≤—Ç–æ–±—ç–∫–∞–ø–∞');
    }
  };

  return {
    getLastBackup,
    restoreFromBackup,
    downloadBackup,
    clearOldBackups,
    hasBackup: !!getLastBackup()
  };
};