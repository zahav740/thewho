// Временная заглушка для useShiftPlanningSync
import { useCallback } from 'react';\nimport { Shift, Order } from '../types';\n\nexport interface PlanningResult {\n  id: string;\n  orderId: string;\n  operationId: string;\n  machine: string;\n  plannedStartDate: string;\n  plannedEndDate: string;\n  quantityAssigned: number;\n  remainingQuantity: number;\n  expectedTimeMinutes: number;\n  setupTimeMinutes: number;\n  bufferTimeMinutes: number;\n  status: 'planned' | 'in-progress' | 'completed' | 'rescheduled';\n  lastRescheduledAt?: string;\n  rescheduledReason?: string;\n}\n\ninterface ShiftPlanningSync {\n  onPlanningUpdate: (updatedPlanning: PlanningResult[]) => void;\n  onReplanningNeeded: (reason: string, affectedOperations: string[]) => void;\n}\n\nexport const useShiftPlanningSync = (\n  shifts: Shift[],\n  orders: Order[],\n  planningResults: PlanningResult[],\n  options: ShiftPlanningSync\n) => {\n  \n  const syncShiftsWithPlanning = useCallback(() => {\n    console.log('Sync disabled temporarily');\n    return Promise.resolve();\n  }, []);\n\n  const getSyncStatistics = useCallback(() => {\n    return {\n      totalOperations: 0,\n      operationsWithActualData: 0,\n      completedOperations: 0,\n      inProgressOperations: 0,\n      machineChanges: 0,\n      syncPercentage: 0\n    };\n  }, []);\n\n  const getMachineChanges = useCallback(() => {\n    return [];\n  }, []);\n\n  return {\n    syncShiftsWithPlanning,\n    getSyncStatistics,\n    getMachineChanges\n  };\n};\n