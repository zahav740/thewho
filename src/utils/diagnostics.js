// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ localStorage
// –í—Å—Ç–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏

console.log('üîç === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –î–ê–ù–ù–´–• –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø ===\n');

// 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–∫–∞–∑—ã
const orders = localStorage.getItem('orders');
if (orders) {
  const parsedOrders = JSON.parse(orders);
  console.log(`üì¶ –ù–∞–π–¥–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: ${parsedOrders.length}`);
  
  if (parsedOrders.length > 0) {
    console.log('\nüìã –°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤:');
    const currentDate = new Date();
    
    parsedOrders.forEach((order, index) => {
      const deadline = new Date(order.deadline);
      const isOverdue = deadline < currentDate;
      const daysDiff = Math.round((deadline.getTime() - currentDate.getTime()) / (1000 * 60 * 60 * 24));
      const status = isOverdue ? `‚ùå –ü–†–û–°–†–û–ß–ï–ù –Ω–∞ ${Math.abs(daysDiff)} –¥–Ω–µ–π` : `‚úÖ –î–æ –¥–µ–¥–ª–∞–π–Ω–∞ ${daysDiff} –¥–Ω–µ–π`;
      
      console.log(`   ${index + 1}. ${order.drawingNumber}`);
      console.log(`      üìÖ –î–µ–¥–ª–∞–π–Ω: ${deadline.toLocaleDateString('ru-RU')} ${status}`);
      console.log(`      ‚≠ê –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: ${order.priority}`);
      console.log(`      üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${order.quantity}`);
      console.log(`      üèóÔ∏è –û–ø–µ—Ä–∞—Ü–∏–π: ${order.operations ? order.operations.length : 0}`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–∫–∞–∑—ã —Å –¥–µ–¥–ª–∞–π–Ω–æ–º 04.05.2025
    const targetDate = '2025-05-04';
    const ordersWithTargetDate = parsedOrders.filter(order => {
      const orderDateStr = order.deadline.startsWith(targetDate);
      return orderDateStr;
    });
    
    if (ordersWithTargetDate.length > 0) {
      console.log(`\nüéØ –ù–∞–π–¥–µ–Ω–æ ${ordersWithTargetDate.length} –∑–∞–∫–∞–∑(–æ–≤) —Å –¥–µ–¥–ª–∞–π–Ω–æ–º 04.05.2025:`);
      ordersWithTargetDate.forEach((order, index) => {
        console.log(`   ${index + 1}. ${order.drawingNumber} (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: ${order.priority})`);
      });
    } else {
      console.log('\n‚ùå –ù–ï –ù–ê–ô–î–ï–ù–û –∑–∞–∫–∞–∑–æ–≤ —Å –¥–µ–¥–ª–∞–π–Ω–æ–º 04.05.2025');
      console.log('üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –°–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ —Å –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–º –¥–µ–¥–ª–∞–π–Ω–æ–º');
    }
  } else {
    console.log('‚ö†Ô∏è –í —Å–∏—Å—Ç–µ–º–µ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤');
  }
} else {
  console.log('‚ùå –ó–∞–∫–∞–∑—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ localStorage');
}

// 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
console.log('\nüìä === –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–õ–ê–ù–ò–†–û–í–ê–ù–ò–Ø ===');
const planningResults = localStorage.getItem('planningResults');
if (planningResults) {
  const parsedResults = JSON.parse(planningResults);
  console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: ${parsedResults.length}`);
  
  if (parsedResults.length > 0) {
    const statusCounts = parsedResults.reduce((acc, result) => {
      acc[result.status] = (acc[result.status] || 0) + 1;
      return acc;
    }, {});
    
    console.log('üìà –°—Ç–∞—Ç—É—Å—ã –æ–ø–µ—Ä–∞—Ü–∏–π:');
    Object.entries(statusCounts).forEach(([status, count]) => {
      console.log(`   ${status}: ${count} –æ–ø–µ—Ä–∞—Ü–∏–π`);
    });
  }
} else {
  console.log('‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
}

// 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–ª–µ—Ä—Ç—ã
console.log('\nüö® === –ê–õ–ï–†–¢–´ ===');
const alerts = localStorage.getItem('planningAlerts');
if (alerts) {
  const parsedAlerts = JSON.parse(alerts);
  console.log(`üîî –ù–∞–π–¥–µ–Ω–æ –∞–ª–µ—Ä—Ç–æ–≤: ${parsedAlerts.length}`);
  
  if (parsedAlerts.length > 0) {
    const activeAlerts = parsedAlerts.filter(alert => alert.status === 'new');
    console.log(`üö® –ê–∫—Ç–∏–≤–Ω—ã—Ö –∞–ª–µ—Ä—Ç–æ–≤: ${activeAlerts.length}`);
    
    activeAlerts.forEach((alert, index) => {
      console.log(`   ${index + 1}. ${alert.title} (${alert.severity})`);
      console.log(`      üìù ${alert.description}`);
    });
  }
} else {
  console.log('‚ùå –ê–ª–µ—Ä—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
}

// 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–º–µ–Ω—ã
console.log('\nüîÑ === –°–ú–ï–ù–´ ===');
const shifts = localStorage.getItem('shifts');
if (shifts) {
  const parsedShifts = JSON.parse(shifts);
  console.log(`üïê –ù–∞–π–¥–µ–Ω–æ —Å–º–µ–Ω: ${parsedShifts.length}`);
} else {
  console.log('‚ùå –°–º–µ–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
}

// 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∂—É—Ä–Ω–∞–ª –ø–µ—Ä–µ–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
console.log('\nüìù === –ñ–£–†–ù–ê–õ –ü–ï–†–ï–ü–õ–ê–ù–ò–†–û–í–ê–ù–ò–ô ===');
const rescheduleLog = localStorage.getItem('rescheduleLog');
if (rescheduleLog) {
  const parsedLog = JSON.parse(rescheduleLog);
  console.log(`üìã –ó–∞–ø–∏—Å–µ–π –≤ –∂—É—Ä–Ω–∞–ª–µ: ${parsedLog.length}`);
} else {
  console.log('‚ùå –ñ—É—Ä–Ω–∞–ª –ø–µ—Ä–µ–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –ø—É—Å—Ç');
}

console.log('\n‚úÖ === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê ===');
console.log('\nüí° –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
console.log('1. –ï—Å–ª–∏ –Ω–µ—Ç –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ - —Å–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑');
console.log('2. –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã - –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ');
console.log('3. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –ª–æ–≥–∞–º–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏ –≤–æ –≤—Ä–µ–º—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è');
console.log('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∫–ª–∞–¥–∫—É "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è" –ø–æ—Å–ª–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è');
