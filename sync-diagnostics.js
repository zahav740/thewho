/**\n * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ —Å–º–µ–Ω–∞–º–∏\n * –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º\n */\n\n// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏\nfunction checkSyncStatus() {\n  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...');\n  \n  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n  const autoSyncEnabled = localStorage.getItem('autoSyncEnabled');\n  const lastSyncTime = localStorage.getItem('lastSyncTime');\n  const lastSyncError = localStorage.getItem('lastSyncError');\n  \n  console.log('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏:');\n  console.log('  - –ê–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è:', autoSyncEnabled === 'true' ? '‚úÖ –í–∫–ª—é—á–µ–Ω–∞' : '‚ùå –û—Ç–∫–ª—é—á–µ–Ω–∞');\n  console.log('  - –ü–æ—Å–ª–µ–¥–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è:', lastSyncTime ? new Date(lastSyncTime).toLocaleString() : '–ù–∏–∫–æ–≥–¥–∞');\n  console.log('  - –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞:', lastSyncError || '–ù–µ—Ç');\n  \n  return {\n    autoSyncEnabled: autoSyncEnabled === 'true',\n    lastSyncTime,\n    lastSyncError\n  };\n}\n\n// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ localStorage\nfunction checkLocalStorageData() {\n  console.log('\\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ localStorage...');\n  \n  const orders = JSON.parse(localStorage.getItem('orders') || '[]');\n  const shifts = JSON.parse(localStorage.getItem('shifts') || '[]');\n  const planningResults = JSON.parse(localStorage.getItem('planningResults') || '[]');\n  \n  console.log('üìã –ó–∞–∫–∞–∑—ã:', orders.length);\n  console.log('üîÑ –°–º–µ–Ω—ã:', shifts.length);\n  console.log('üìÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:', planningResults.length);\n  \n  // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–ø–µ—Ä–∞—Ü–∏–∏\n  const totalOperations = orders.reduce((sum, order) => sum + (order.operations?.length || 0), 0);\n  console.log('üîß –í—Å–µ–≥–æ –æ–ø–µ—Ä–∞—Ü–∏–π –≤ –∑–∞–∫–∞–∑–∞—Ö:', totalOperations);\n  \n  // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤ —Å–º–µ–Ω–∞—Ö\n  const shiftOperations = shifts.reduce((sum, shift) => sum + (shift.operations?.length || 0), 0);\n  console.log('üè≠ –û–ø–µ—Ä–∞—Ü–∏–π –≤ —Å–º–µ–Ω–∞—Ö:', shiftOperations);\n  \n  return {\n    orders: orders.length,\n    shifts: shifts.length,\n    planningResults: planningResults.length,\n    totalOperations,\n    shiftOperations\n  };\n}\n\n// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π –≤ —Å–º–µ–Ω–∞—Ö –∏ –∑–∞–∫–∞–∑–∞—Ö\nfunction checkOperationMatching() {\n  console.log('\\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π...');\n  \n  const orders = JSON.parse(localStorage.getItem('orders') || '[]');\n  const shifts = JSON.parse(localStorage.getItem('shifts') || '[]');\n  \n  const matches = [];\n  const mismatches = [];\n  \n  for (const shift of shifts) {\n    if (!shift.operations) continue;\n    \n    for (const shiftOp of shift.operations) {\n      let found = false;\n      \n      // –ò—â–µ–º –ø–æ ID –æ–ø–µ—Ä–∞—Ü–∏–∏\n      if (shiftOp.operationId) {\n        for (const order of orders) {\n          const operation = order.operations?.find(op => op.id === shiftOp.operationId);\n          if (operation) {\n            matches.push({\n              drawingNumber: shiftOp.drawingNumber,\n              operationId: shiftOp.operationId,\n              matchType: 'by_id',\n              orderDrawing: order.drawingNumber,\n              operationSequence: operation.sequenceNumber\n            });\n            found = true;\n            break;\n          }\n        }\n      }\n      \n      // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–æ ID, –∏—â–µ–º –ø–æ –Ω–æ–º–µ—Ä—É —á–µ—Ä—Ç–µ–∂–∞\n      if (!found && shiftOp.drawingNumber) {\n        const order = orders.find(o => o.drawingNumber === shiftOp.drawingNumber);\n        if (order && order.operations?.length > 0) {\n          matches.push({\n            drawingNumber: shiftOp.drawingNumber,\n            operationId: shiftOp.operationId,\n            matchType: 'by_drawing',\n            orderDrawing: order.drawingNumber,\n            operationSequence: order.operations[0].sequenceNumber\n          });\n          found = true;\n        }\n      }\n      \n      if (!found) {\n        mismatches.push({\n          drawingNumber: shiftOp.drawingNumber,\n          operationId: shiftOp.operationId,\n          machine: shift.machine,\n          date: shift.date\n        });\n      }\n    }\n  }\n  \n  console.log('‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π:', matches.length);\n  console.log('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π:', mismatches.length);\n  \n  if (matches.length > 0) {\n    console.log('\\nüìä –ü—Ä–∏–º–µ—Ä—ã –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π:');\n    matches.slice(0, 5).forEach((match, i) => {\n      console.log(`  ${i + 1}. ${match.drawingNumber} (${match.matchType}) ‚Üí ${match.orderDrawing}:${match.operationSequence}`);\n    });\n  }\n  \n  if (mismatches.length > 0) {\n    console.log('\\n‚ö†Ô∏è –û–ø–µ—Ä–∞—Ü–∏–∏ –±–µ–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π:');\n    mismatches.forEach((mismatch, i) => {\n      console.log(`  ${i + 1}. ${mismatch.drawingNumber} (ID: ${mismatch.operationId}) –Ω–∞ ${mismatch.machine}`);\n    });\n  }\n  \n  return { matches, mismatches };\n}\n\n// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å–º–µ–Ω —Å—Ç–∞–Ω–∫–æ–≤\nfunction analyzeMachineChanges() {\n  console.log('\\nüîÑ –ê–Ω–∞–ª–∏–∑ —Å–º–µ–Ω —Å—Ç–∞–Ω–∫–æ–≤...');\n  \n  const shifts = JSON.parse(localStorage.getItem('shifts') || '[]');\n  const planningResults = JSON.parse(localStorage.getItem('planningResults') || '[]');\n  \n  const machineChanges = [];\n  \n  for (const shift of shifts) {\n    if (!shift.operations) continue;\n    \n    for (const shiftOp of shift.operations) {\n      const planning = planningResults.find(pr => pr.operationId === shiftOp.operationId);\n      \n      if (planning && planning.machine !== shift.machine) {\n        machineChanges.push({\n          operationId: shiftOp.operationId,\n          drawingNumber: shiftOp.drawingNumber,\n          plannedMachine: planning.machine,\n          actualMachine: shift.machine,\n          isRescheduled: planning.status === 'rescheduled'\n        });\n      }\n    }\n  }\n  \n  console.log('üîÑ –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ —Å–º–µ–Ω —Å—Ç–∞–Ω–∫–æ–≤:', machineChanges.length);\n  \n  if (machineChanges.length > 0) {\n    console.log('\\nüìã –î–µ—Ç–∞–ª–∏ —Å–º–µ–Ω —Å—Ç–∞–Ω–∫–æ–≤:');\n    machineChanges.forEach((change, i) => {\n      const status = change.isRescheduled ? '‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ' : '‚ùå –ù–ï –æ–±–Ω–æ–≤–ª–µ–Ω–æ';\n      console.log(`  ${i + 1}. ${change.drawingNumber}: ${change.plannedMachine} ‚Üí ${change.actualMachine} (${status})`);\n    });\n  }\n  \n  return machineChanges;\n}\n\n// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏\nfunction runSyncDiagnostics() {\n  console.clear();\n  console.log('üöÄ –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è...');\n  console.log('================================================\\n');\n  \n  const syncStatus = checkSyncStatus();\n  const dataStatus = checkLocalStorageData();\n  const operationMatching = checkOperationMatching();\n  const machineChanges = analyzeMachineChanges();\n  \n  console.log('\\nüìä –°–í–û–î–ö–ê –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò:');\n  console.log('=====================');\n  console.log('‚úÖ –ê–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è:', syncStatus.autoSyncEnabled ? '–í–∫–ª—é—á–µ–Ω–∞' : '–û—Ç–∫–ª—é—á–µ–Ω–∞');\n  console.log('üìã –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤:', dataStatus.orders);\n  console.log('üîÑ –í—Å–µ–≥–æ —Å–º–µ–Ω:', dataStatus.shifts);\n  console.log('üîß –û–ø–µ—Ä–∞—Ü–∏–π –≤ –∑–∞–∫–∞–∑–∞—Ö:', dataStatus.totalOperations);\n  console.log('üè≠ –û–ø–µ—Ä–∞—Ü–∏–π –≤ —Å–º–µ–Ω–∞—Ö:', dataStatus.shiftOperations);\n  console.log('‚úÖ –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π –Ω–∞–π–¥–µ–Ω–æ:', operationMatching.matches.length);\n  console.log('‚ùå –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π:', operationMatching.mismatches.length);\n  console.log('üîÑ –°–º–µ–Ω —Å—Ç–∞–Ω–∫–æ–≤:', machineChanges.length);\n  \n  // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏\n  console.log('\\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');\n  console.log('===============');\n  \n  if (!syncStatus.autoSyncEnabled) {\n    console.log('‚ùó –í–∫–ª—é—á–∏—Ç–µ –∞–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö');\n  }\n  \n  if (operationMatching.mismatches.length > 0) {\n    console.log('‚ùó –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å ID –æ–ø–µ—Ä–∞—Ü–∏–π –∏ –Ω–æ–º–µ—Ä–æ–≤ —á–µ—Ä—Ç–µ–∂–µ–π –≤ —Å–º–µ–Ω–∞—Ö');\n  }\n  \n  if (machineChanges.length > 0) {\n    const notUpdated = machineChanges.filter(c => !c.isRescheduled).length;\n    if (notUpdated > 0) {\n      console.log(`‚ùó ${notUpdated} —Å–º–µ–Ω —Å—Ç–∞–Ω–∫–æ–≤ –Ω–µ –æ—Ç—Ä–∞–∂–µ–Ω—ã –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ - –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é`);\n    }\n  }\n  \n  if (dataStatus.shiftOperations === 0) {\n    console.log('‚ùó –í —Å–º–µ–Ω–∞—Ö –Ω–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–π - –¥–æ–±–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞—Ö');\n  }\n  \n  console.log('\\n‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');\n  \n  return {\n    syncStatus,\n    dataStatus,\n    operationMatching,\n    machineChanges\n  };\n}\n\n// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏\nfunction forceSyncWithPlanning() {\n  console.log('üöÄ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è...');\n  \n  // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)\n  if (typeof window !== 'undefined' && window.shiftPlanningSync) {\n    return window.shiftPlanningSync.syncShiftsWithPlanning();\n  } else {\n    console.log('‚ùå –°–µ—Ä–≤–∏—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ.');\n    return Promise.reject('Sync service not available');\n  }\n}\n\n// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏\nif (typeof window !== 'undefined') {\n  window.syncDiagnostics = {\n    run: runSyncDiagnostics,\n    checkStatus: checkSyncStatus,\n    checkData: checkLocalStorageData,\n    checkMatching: checkOperationMatching,\n    analyzeMachineChanges: analyzeMachineChanges,\n    forceSync: forceSyncWithPlanning\n  };\n  \n  console.log('\\nüîß –§—É–Ω–∫—Ü–∏–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –∫–æ–Ω—Å–æ–ª–∏:');\n  console.log('- syncDiagnostics.run() - –ø–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞');\n  console.log('- syncDiagnostics.checkStatus() - –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫');\n  console.log('- syncDiagnostics.checkData() - –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö');\n  console.log('- syncDiagnostics.checkMatching() - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π');\n  console.log('- syncDiagnostics.analyzeMachineChanges() - –∞–Ω–∞–ª–∏–∑ —Å–º–µ–Ω —Å—Ç–∞–Ω–∫–æ–≤');\n  console.log('\\n‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç–µ syncDiagnostics.run() –¥–ª—è –Ω–∞—á–∞–ª–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏');\n}\n\n// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ\nif (typeof window !== 'undefined' && document.readyState === 'complete') {\n  setTimeout(() => {\n    console.log('\\nüîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã...');\n    console.log('–î–ª—è –æ—Ç–º–µ–Ω—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: clearTimeout(window.autoDiagnosticTimeout)');\n    \n    window.autoDiagnosticTimeout = setTimeout(runSyncDiagnostics, 2000);\n  }, 1000);\n}\n