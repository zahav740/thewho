// –¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –¥–µ–¥–ª–∞–π–Ω–æ–≤
const testData = {
  // –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑
  overdueOrder: {
    id: "test-overdue-order",
    drawingNumber: "BM14362A",
    deadline: "2025-05-04T14:00:00.000Z", // 04.05.2025 - –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–æ
    priority: 3,
    quantity: 10,
    operations: [
      {
        id: "op-test-1",
        sequenceNumber: 1,
        operationType: "3-axis",
        estimatedTime: 60,
        description: "–§—Ä–µ–∑–µ—Ä–æ–≤–∞–Ω–∏–µ"
      },
      {
        id: "op-test-2",
        sequenceNumber: 2,
        operationType: "turning",
        estimatedTime: 45,
        description: "–¢–æ–∫–∞—Ä–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞"
      }
    ]
  },
  
  // –û–±—ã—á–Ω—ã–π –∑–∞–∫–∞–∑
  normalOrder: {
    id: "test-normal-order",
    drawingNumber: "NORM123",
    deadline: "2025-06-15T14:00:00.000Z", // 15.06.2025 - –≤ –±—É–¥—É—â–µ–º
    priority: 2,
    quantity: 5,
    operations: [
      {
        id: "op-norm-1",
        sequenceNumber: 1,
        operationType: "milling",
        estimatedTime: 30,
        description: "–§—Ä–µ–∑–µ—Ä–æ–≤–∞–Ω–∏–µ"
      }
    ]
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏ –ª–æ–≥–∏–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
function preprocessOrdersForPlanning(orders) {
  const currentDate = new Date();
  const processedOrders = [];
  
  console.log('\nüìã === –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–ï–î–í–ê–†–ò–¢–ï–õ–¨–ù–û–ô –û–ë–†–ê–ë–û–¢–ö–ò –ó–ê–ö–ê–ó–û–í ===');
  console.log(`üìÖ –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞: ${currentDate.toLocaleDateString('ru-RU')} (${currentDate.toISOString()})`);
  console.log(`üì¶ –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: ${orders.length}`);
  
  for (const order of orders) {
    let processedOrder = { ...order };
    const deadline = new Date(order.deadline);
    
    console.log(`\nüîç –ó–∞–∫–∞–∑ ${order.drawingNumber}:`);
    console.log(`   üìÖ –î–µ–¥–ª–∞–π–Ω: ${deadline.toLocaleDateString('ru-RU')} (${deadline.toISOString()})`);
    console.log(`   üèóÔ∏è –û–ø–µ—Ä–∞—Ü–∏–π: ${order.operations.length}`);
    console.log(`   üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${order.quantity}`);
    console.log(`   ‚≠ê –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: ${order.priority}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–æ—Å—Ä–æ—á–µ–Ω –ª–∏ –¥–µ–¥–ª–∞–π–Ω
    if (deadline < currentDate) {
      const daysOverdue = Math.ceil((currentDate.getTime() - deadline.getTime()) / (1000 * 60 * 60 * 24));
      console.warn(`‚ö†Ô∏è –ü–†–û–°–†–û–ß–ï–ù–ù–´–ô –î–ï–î–õ–ê–ô–ù: –ó–∞–∫–∞–∑ ${order.drawingNumber} –ø—Ä–æ—Å—Ä–æ—á–µ–Ω –Ω–∞ ${daysOverdue} –¥–Ω–µ–π!`);
      
      // –ü–æ–≤—ã—à–∞–µ–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ –¥–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ
      if (processedOrder.priority > 1) {
        console.log(`üî∫ –ü–æ–≤—ã—à–∞–µ–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Å ${processedOrder.priority} –¥–æ 1 (–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π)`);
        processedOrder.priority = 1;
      } else {
        console.log(`‚úÖ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç —É–∂–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π (${processedOrder.priority})`);
      }
      
      // –í—ã—á–∏—Å–ª—è–µ–º –Ω–æ–≤—ã–π —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –¥–µ–¥–ª–∞–π–Ω
      const newDeadline = calculateRealisticDeadline(processedOrder, currentDate);
      console.log(`üìÖ –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–µ–¥–ª–∞–π–Ω —Å ${deadline.toLocaleDateString('ru-RU')} –Ω–∞ ${newDeadline.toLocaleDateString('ru-RU')}`);
      processedOrder.deadline = newDeadline.toISOString();
      
      // –°–æ–∑–¥–∞–µ–º –∞–ª–µ—Ä—Ç –æ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–æ–º –∑–∞–∫–∞–∑–µ
      console.log(`üö® –°–æ–∑–¥–∞–Ω –∞–ª–µ—Ä—Ç: –ó–∞–∫–∞–∑ ${order.drawingNumber} –ø—Ä–æ—Å—Ä–æ—á–µ–Ω –Ω–∞ ${daysOverdue} –¥–Ω–µ–π`);
    } else {
      const daysUntilDeadline = Math.ceil((deadline.getTime() - currentDate.getTime()) / (1000 * 60 * 60 * 24));
      console.log(`‚úÖ –î–µ–¥–ª–∞–π–Ω –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –Ω–æ—Ä–º—ã (—á–µ—Ä–µ–∑ ${daysUntilDeadline} –¥–Ω–µ–π)`);
    }
    
    processedOrders.push(processedOrder);
  }
  
  console.log(`\n‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${processedOrders.length} –∑–∞–∫–∞–∑–æ–≤`);
  
  return processedOrders;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–≥–æ –¥–µ–¥–ª–∞–π–Ω–∞
function calculateRealisticDeadline(order, fromDate) {
  // –°—É–º–º–∏—Ä—É–µ–º –≤—Ä–µ–º—è –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
  const totalTimeMinutes = order.operations.reduce((total, op) => {
    return total + (op.estimatedTime || 0) * order.quantity;
  }, 0);
  
  // –î–æ–±–∞–≤–ª—è–µ–º 30% –±—É—Ñ–µ—Ä –∏ –≤—Ä–µ–º—è –Ω–∞–ª–∞–¥–∫–∏ (–ø—Ä–∏–º–µ—Ä–Ω–æ 60 –º–∏–Ω –Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏—é)
  const bufferedTimeMinutes = totalTimeMinutes * 1.3 + (order.operations.length * 60);
  
  // –£—á–∏—Ç—ã–≤–∞–µ–º —Ä–∞–±–æ—á–∏–µ –¥–Ω–∏ (–ø—Ä–∏–º–µ—Ä–Ω–æ 8 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å)
  const workingDaysNeeded = Math.ceil(bufferedTimeMinutes / 480); // 480 –º–∏–Ω = 8 —á–∞—Å–æ–≤
  
  // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –¥–∞—Ç—É, –¥–æ–±–∞–≤–ª—è—è —Ä–∞–±–æ—á–∏–µ –¥–Ω–∏ + –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–ø–∞—Å
  const newDeadline = new Date(fromDate);
  
  // –î–æ–±–∞–≤–ª—è–µ–º –¥–Ω–∏ —Å —É—á–µ—Ç–æ–º –≤—ã—Ö–æ–¥–Ω—ã—Ö (–º–Ω–æ–∂–∏–º –Ω–∞ 1.4 –¥–ª—è —É—á–µ—Ç–∞ –≤—ã—Ö–æ–¥–Ω—ã—Ö)
  const calendarDaysToAdd = Math.ceil(workingDaysNeeded * 1.4) + 2; // +2 –¥–Ω—è –∑–∞–ø–∞—Å
  newDeadline.setDate(newDeadline.getDate() + calendarDaysToAdd);
  
  console.log(`   üìä –í—Ä–µ–º—è –æ–ø–µ—Ä–∞—Ü–∏–π: ${totalTimeMinutes} –º–∏–Ω`);
  console.log(`   üìä –í—Ä–µ–º—è —Å –±—É—Ñ–µ—Ä–æ–º: ${bufferedTimeMinutes} –º–∏–Ω`);
  console.log(`   üìä –†–∞–±–æ—á–∏—Ö –¥–Ω–µ–π –Ω—É–∂–Ω–æ: ${workingDaysNeeded}`);
  console.log(`   üìä –ö–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã—Ö –¥–Ω–µ–π –¥–æ–±–∞–≤–ª—è–µ–º: ${calendarDaysToAdd}`);
  
  return newDeadline;
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
console.log('üß™ –ó–ê–ü–£–°–ö –¢–ï–°–¢–ê –û–ë–†–ê–ë–û–¢–ö–ò –ü–†–û–°–†–û–ß–ï–ù–ù–´–• –î–ï–î–õ–ê–ô–ù–û–í');

const testOrders = [testData.overdueOrder, testData.normalOrder];
const processedOrders = preprocessOrdersForPlanning(testOrders);

console.log('\nüìä === –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ê ===');
processedOrders.forEach((order, index) => {
  console.log(`\n${index + 1}. –ó–∞–∫–∞–∑ ${order.drawingNumber}:`);
  console.log(`   üè∑Ô∏è ID: ${order.id}`);
  console.log(`   üìÖ –î–µ–¥–ª–∞–π–Ω: ${new Date(order.deadline).toLocaleDateString('ru-RU')}`);
  console.log(`   ‚≠ê –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: ${order.priority}`);
  console.log(`   üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${order.quantity}`);
  console.log(`   üèóÔ∏è –û–ø–µ—Ä–∞—Ü–∏–π: ${order.operations.length}`);
});

console.log('\n‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù');
