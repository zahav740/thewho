@echo off
echo ===========================================
echo –ë–´–°–¢–†–´–ô –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù–ò–Ø –û–ü–ï–†–ê–¶–ò–ô
echo ===========================================
echo.

echo –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...
echo.

echo 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ —Å–º–µ–Ω –≤ –ë–î:
cd backend
call npx ts-node -e "
const { Client } = require('pg');
const client = new Client({
  connectionString: 'postgresql://postgres:magarel@localhost:5432/thewho'
});

async function checkShifts() {
  try {
    await client.connect();
    
    console.log('üìä –¢–µ–∫—É—â–∏–µ —Å–º–µ–Ω—ã —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –¥–µ—Ç–∞–ª–µ–π:');
    const shifts = await client.query(`
      SELECT 
        id,
        \"machineId\",
        drawingnumber,
        \"dayShiftQuantity\",
        \"nightShiftQuantity\",
        (\"dayShiftQuantity\" + \"nightShiftQuantity\") as total,
        \"dayShiftOperator\",
        \"nightShiftOperator\"
      FROM shift_records 
      ORDER BY \"createdAt\" DESC 
      LIMIT 5
    `);
    
    shifts.rows.forEach(shift => {
      console.log(\`  ID: \${shift.id}\`);
      console.log(\`  –°—Ç–∞–Ω–æ–∫: \${shift.machineId}\`);
      console.log(\`  –ß–µ—Ä—Ç–µ–∂: \${shift.drawingnumber}\`);
      console.log(\`  –î–µ–Ω—å: \${shift.dayShiftQuantity || 0} (\${shift.dayShiftOperator || '-'})\`);
      console.log(\`  –ù–æ—á—å: \${shift.nightShiftQuantity || 0} (\${shift.nightShiftOperator || '-'})\`);
      console.log(\`  –ò–¢–û–ì–û: \${shift.total || 0} –¥–µ—Ç–∞–ª–µ–π\`);
      
      if (shift.total >= 30) {
        console.log(\`  üéâ –ó–ê–í–ï–†–®–ï–ù–û! \${shift.total} >= 30 - –¥–æ–ª–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ\`);
      } else {
        console.log(\`  ‚è≥ –í –ø—Ä–æ—Ü–µ—Å—Å–µ: \${shift.total}/30\`);
      }
      
      console.log('  ---');
    });
    
    await client.end();
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error);
  }
}

checkShifts();
"

echo.
echo 2. –õ–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã:
echo    ‚úÖ –°–∏—Å—Ç–µ–º–∞ –∫–∞–∂–¥—ã–µ 3-5 —Å–µ–∫—É–Ω–¥ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –æ–ø–µ—Ä–∞—Ü–∏–π
echo    ‚úÖ –ö–æ–≥–¥–∞ –î–µ–Ω—å + –ù–æ—á—å >= 30 —à—Ç—É–∫, –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
echo    ‚úÖ –¢—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞: –ó–∞–∫—Ä—ã—Ç—å / –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å / –°–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å
echo    ‚úÖ –ü—Ä–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π PlanningModal
echo.

echo 3. –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:
echo    - –ó–∞–ø—É—Å—Ç–∏—Ç–µ frontend: npm start
echo    - –û—Ç–∫—Ä–æ–π—Ç–µ "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞" 
echo    - –î–æ–±–∞–≤—å—Ç–µ –∑–∞–ø–∏—Å–∏ —Å–º–µ–Ω –¥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è 30 —à—Ç—É–∫
echo    - –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–∫–∞–∂–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
echo.

echo ===========================================
echo ‚úÖ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Æ
echo ===========================================
pause
