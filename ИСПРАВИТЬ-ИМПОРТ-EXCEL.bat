@echo off
setlocal enabledelayedexpansion

echo ====================================
echo –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ò–ú–ü–û–†–¢–ê EXCEL
echo ====================================
echo –ü–†–û–ë–õ–ï–ú–ê: –§–∞–π–ª—ã –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –±–µ–∑ buffer
echo –†–ï–®–ï–ù–ò–ï: –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é multer
echo.

echo üîç –ü–†–û–ë–õ–ï–ú–ê –í –õ–û–ì–ê–•:
echo hasBuffer: false, bufferSize: undefined
echo ‚ùå –§–∞–π–ª –∏–ª–∏ buffer –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
echo.

echo üîß –ò–°–ü–†–ê–í–õ–Ø–ï–ú FILES.CONTROLLER.TS...

REM –°–æ–∑–¥–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
(
echo /**
echo  * @file: files.controller.ts 
echo  * @description: –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏
echo  * @dependencies: files.service
echo  * @created: 2025-01-28
echo  * @updated: 2025-06-09 // –ò–°–ü–†–ê–í–õ–ï–ù–û: multer buffer –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
echo  */
echo import {
echo   Controller,
echo   Get,
echo   Post,
echo   Delete,
echo   Param,
echo   Query,
echo   UseInterceptors,
echo   UploadedFile,
echo   Res,
echo   StreamableFile,
echo } from '@nestjs/common';
echo import { FileInterceptor } from '@nestjs/platform-express';
echo import { ApiTags, ApiOperation, ApiConsumes, ApiQuery } from '@nestjs/swagger';
echo import { Response } from 'express';
echo import { FilesService } from './files.service';
echo import type { Express } from 'express';
echo.
echo @ApiTags^('files'^)
echo @Controller^('files'^)
echo export class FilesController {
echo   constructor^(private readonly filesService: FilesService^) {}
echo.
echo   @Post^('upload'^)
echo   @ApiOperation^({ summary: '–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª' }^)
echo   @ApiConsumes^('multipart/form-data'^)
echo   @UseInterceptors^(FileInterceptor^('file'^)^)
echo   async uploadFile^(
echo     @UploadedFile^(^) file: Express.Multer.File,
echo     @Query^('folder'^) folder?: string,
echo   ^) {
echo     const filename = await this.filesService.uploadFile^(file, folder^);
echo     return {
echo       filename,
echo       originalName: file.originalname,
echo       size: file.size,
echo       mimetype: file.mimetype,
echo     };
echo   }
echo.
echo   @Post^('excel/parse'^)
echo   @ApiOperation^({ summary: '–ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–∞—Ä—Å–∏–Ω–≥ Excel —Ñ–∞–π–ª–∞ —Å buffer' }^)
echo   @ApiConsumes^('multipart/form-data'^)
echo   @UseInterceptors^(FileInterceptor^('file', {
echo     // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ù–ï —É–∫–∞–∑—ã–≤–∞–µ–º storage - –∏—Å–ø–æ–ª—å–∑—É–µ–º MemoryStorage –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
echo     // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –≠—Ç–æ –∑–∞—Å—Ç–∞–≤–ª—è–µ—Ç multer —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Ñ–∞–π–ª –≤ buffer –≤–º–µ—Å—Ç–æ –¥–∏—Å–∫–∞
echo     fileFilter: ^(req, file, cb^) =^> {
echo       console.log^('üîç –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô FileInterceptor –ø—Ä–æ–≤–µ—Ä–∫–∞:', {
echo         originalname: file.originalname,
echo         mimetype: file.mimetype,
echo         size: file.size,
echo         hasFieldname: !!file.fieldname
echo       }^);
echo       
echo       const allowedTypes = [
echo         'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', // .xlsx
echo         'application/vnd.ms-excel', // .xls
echo         'application/octet-stream' // –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –±—Ä–∞—É–∑–µ—Ä—ã –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç —ç—Ç–æ—Ç MIME type
echo       ];
echo       
echo       const isValidType = allowedTypes.includes^(file.mimetype^) ^|^| file.originalname.match^(/\.^(xlsx?^|csv^)$/^);
echo       
echo       if ^(isValidType^) {
echo         console.log^('‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –§–∞–π–ª –ø—Ä–æ—à–µ–ª –ø—Ä–æ–≤–µ—Ä–∫—É, –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ buffer'^);
echo         cb^(null, true^);
echo       } else {
echo         console.error^('‚ùå –ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞:', file.mimetype^);
echo         cb^(new Error^('–¢–æ–ª—å–∫–æ Excel —Ñ–∞–π–ª—ã ^(.xlsx, .xls^) —Ä–∞–∑—Ä–µ—à–µ–Ω—ã'^), false^);
echo       }
echo     },
echo     limits: {
echo       fileSize: 50 * 1024 * 1024, // 50MB –º–∞–∫—Å–∏–º—É–º
echo       fieldSize: 50 * 1024 * 1024, // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª—è–µ–º –ª–∏–º–∏—Ç –ø–æ–ª—è
echo     },
echo   }^)^)
echo   async parseExcel^(@UploadedFile^(^) file: Express.Multer.File^) {
echo     console.log^('üìÅ –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô FILES CONTROLLER: –ü–æ–ª—É—á–µ–Ω —Ñ–∞–π–ª:', {
echo       originalname: file?.originalname,
echo       size: file?.size,
echo       mimetype: file?.mimetype,
echo       hasBuffer: !!file?.buffer,
echo       bufferSize: file?.buffer?.length,
echo       fieldname: file?.fieldname
echo     }^);
echo     
echo     // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ë–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞
echo     if ^(!file^) {
echo       console.error^('‚ùå –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô: –§–∞–π–ª –≤–æ–æ–±—â–µ –Ω–µ –ø–æ–ª—É—á–µ–Ω!'^);
echo       throw new Error^('–§–∞–π–ª –Ω–µ –ø–æ–ª—É—á–µ–Ω –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–º'^);
echo     }
echo     
echo     if ^(!file.buffer^) {
echo       console.error^('‚ùå –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô: –§–∞–π–ª –ø–æ–ª—É—á–µ–Ω, –Ω–æ buffer –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!'^);
echo       console.error^('üìä –î–µ—Ç–∞–ª–∏ —Ñ–∞–π–ª–∞:', {
echo         originalname: file.originalname,
echo         size: file.size,
echo         mimetype: file.mimetype,
echo         fieldname: file.fieldname,
echo         encoding: file.encoding,
echo         hasPath: !!file.path,
echo         hasDestination: !!file.destination
echo       }^);
echo       throw new Error^('–§–∞–π–ª –ø–æ–ª—É—á–µ–Ω –±–µ–∑ buffer - –ø—Ä–æ–±–ª–µ–º–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ multer'^);
echo     }
echo     
echo     if ^(file.buffer.length === 0^) {
echo       console.error^('‚ùå –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô: Buffer –ø—É—Å—Ç–æ–π!'^);
echo       throw new Error^('–ü–æ–ª—É—á–µ–Ω –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª'^);
echo     }
echo     
echo     console.log^('‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô: –§–∞–π–ª –ø—Ä–æ—à–µ–ª –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏, –ø–µ—Ä–µ–¥–∞–µ–º –≤ —Å–µ—Ä–≤–∏—Å'^);
echo     
echo     return this.filesService.parseExcel^(file^);
echo   }
echo.
echo   // –û—Å—Ç–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π...
echo   @Get^(':filename'^)
echo   @ApiOperation^({ summary: '–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª' }^)
echo   @ApiQuery^({ name: 'folder', required: false }^)
echo   async getFile^(
echo     @Param^('filename'^) filename: string,
echo     @Query^('folder'^) folder: string,
echo     @Res^({ passthrough: true }^) res: Response,
echo   ^): Promise^<StreamableFile^> {
echo     const buffer = await this.filesService.getFile^(filename, folder^);
echo     
echo     const extension = filename.split^('.'^).pop^(^)?.toLowerCase^(^);
echo     let contentType = 'application/octet-stream';
echo     
echo     switch ^(extension^) {
echo       case 'pdf':
echo         contentType = 'application/pdf';
echo         break;
echo       case 'xlsx':
echo       case 'xls':
echo         contentType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';
echo         break;
echo       case 'jpg':
echo       case 'jpeg':
echo         contentType = 'image/jpeg';
echo         break;
echo       case 'png':
echo         contentType = 'image/png';
echo         break;
echo     }
echo     
echo     res.set^({
echo       'Content-Type': contentType,
echo       'Content-Disposition': `attachment; filename="${filename}"`,
echo     }^);
echo     
echo     return new StreamableFile^(buffer^);
echo   }
echo.
echo   @Delete^(':filename'^)
echo   @ApiOperation^({ summary: '–£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª' }^)
echo   @ApiQuery^({ name: 'folder', required: false }^)
echo   async deleteFile^(
echo     @Param^('filename'^) filename: string,
echo     @Query^('folder'^) folder?: string,
echo   ^) {
echo     await this.filesService.deleteFile^(filename, folder^);
echo     return { message: '–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω' };
echo   }
echo.
echo   @Post^('pdf/preview'^)
echo   @ApiOperation^({ summary: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–µ–≤—å—é PDF' }^)
echo   @ApiConsumes^('multipart/form-data'^)
echo   @UseInterceptors^(FileInterceptor^('file'^)^)
echo   async generatePdfPreview^(@UploadedFile^(^) file: Express.Multer.File^) {
echo     const preview = await this.filesService.generatePdfPreview^(file.buffer^);
echo     return { preview };
echo   }
echo.
echo   @Get^(^)
echo   @ApiOperation^({ summary: '–°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤' }^)
echo   @ApiQuery^({ name: 'folder', required: false }^)
echo   async listFiles^(@Query^('folder'^) folder?: string^) {
echo     return this.filesService.listFiles^(folder^);
echo   }
echo.
echo   @Get^(':filename/info'^)
echo   @ApiOperation^({ summary: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ' }^)
echo   @ApiQuery^({ name: 'folder', required: false }^)
echo   async getFileInfo^(
echo     @Param^('filename'^) filename: string,
echo     @Query^('folder'^) folder?: string,
echo   ^) {
echo     return this.filesService.getFileInfo^(filename, folder^);
echo   }
echo }
) > backend\src\modules\files\files.controller.FIXED.ts

echo ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä —Å–æ–∑–¥–∞–Ω: files.controller.FIXED.ts
echo.

echo üîÑ –ó–∞–º–µ–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–µ–π...
copy backend\src\modules\files\files.controller.ts backend\src\modules\files\files.controller.BACKUP.ts
copy backend\src\modules\files\files.controller.FIXED.ts backend\src\modules\files\files.controller.ts

echo ‚úÖ –§–∞–π–ª –∑–∞–º–µ–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!
echo.

echo üõ†Ô∏è –ö–õ–Æ–ß–ï–í–´–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:
echo 1. ‚úÖ –£–±—Ä–∞–Ω–∞ –∫–∞—Å—Ç–æ–º–Ω–∞—è storage –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
echo 2. ‚úÖ Multer —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç MemoryStorage –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
echo 3. ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –¥–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ñ–∞–π–ª–æ–≤
echo 4. ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –ª–∏–º–∏—Ç fieldSize –¥–ª—è –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤
echo 5. ‚úÖ –£–ª—É—á—à–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
echo.

echo üîÑ –°–õ–ï–î–£–Æ–©–ò–ô –®–ê–ì: –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ backend —Å–µ—Ä–≤–µ—Ä
echo.
echo cd backend
echo npm run start
echo.
echo –ü–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å Excel —Ñ–∞–π–ª —Å–Ω–æ–≤–∞.
echo –í –ª–æ–≥–∞—Ö –≤—ã –¥–æ–ª–∂–Ω—ã —É–≤–∏–¥–µ—Ç—å:
echo ‚úÖ hasBuffer: true
echo ‚úÖ bufferSize: [—Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞]
echo.

pause
