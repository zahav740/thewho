@echo off
echo ===============================================
echo –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–®–ò–ë–û–ö –ò–ú–ü–û–†–¢–ê –ò –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´
echo ===============================================
echo.

echo ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –ü—É—Ç—å –∏–º–ø–æ—Ä—Ç–∞ PlanningModal
echo    –ë—ã–ª–æ: import PlanningModal from '../../components/PlanningModal/PlanningModal';
echo    –°—Ç–∞–ª–æ: import PlanningModal from '../../../components/PlanningModal/PlanningModal';
echo.

echo ‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–æ–∑–¥–∞–Ω—ã:
echo    - OperationCompletionModal.tsx (—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏)
echo    - OperationDetailModal.tsx (–¥–µ—Ç–∞–ª–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏) 
echo    - ActiveMachinesMonitor.tsx (–æ–±–Ω–æ–≤–ª–µ–Ω —Å –∞–≤—Ç–æ–ø—Ä–æ–≤–µ—Ä–∫–æ–π)
echo.

echo üîÑ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å frontend:
echo    cd frontend
echo    npm start
echo.

echo üìä –¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –≤ –ë–î:
cd backend
call npx ts-node -e "
const { Client } = require('pg');
const client = new Client({
  connectionString: 'postgresql://postgres:magarel@localhost:5432/thewho'
});

async function showTestData() {
  try {
    await client.connect();
    
    console.log('üìã –°–º–µ–Ω—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–≤—Ç–æ–∑–∞–≤–µ—Ä—à–µ–Ω–∏—è:');
    const shifts = await client.query(\`
      SELECT 
        sr.id,
        sr.\"machineId\",
        sr.\"drawingnumber\",
        sr.\"dayShiftQuantity\",
        sr.\"nightShiftQuantity\",
        sr.\"dayShiftOperator\",
        sr.\"nightShiftOperator\",
        (sr.\"dayShiftQuantity\" + sr.\"nightShiftQuantity\") as total
      FROM shift_records sr
      WHERE sr.\"drawingnumber\" = 'C6HP0021A'
      ORDER BY sr.\"createdAt\" DESC
      LIMIT 5
    \`);
    
    let totalForC6HP = 0;
    shifts.rows.forEach(shift => {
      const shiftTotal = (shift.dayShiftQuantity || 0) + (shift.nightShiftQuantity || 0);
      totalForC6HP += shiftTotal;
      console.log(\`  üè≠ –°—Ç–∞–Ω–æ–∫ \${shift.machineId}: \${shift.dayShiftQuantity || 0} (–¥–µ–Ω—å) + \${shift.nightShiftQuantity || 0} (–Ω–æ—á—å) = \${shiftTotal}\`);
      console.log(\`     –û–ø–µ—Ä–∞—Ç–æ—Ä—ã: \${shift.dayShiftOperator || '-'} / \${shift.nightShiftOperator || '-'}\`);
    });
    
    console.log(\`\\nüéØ –ò–¢–û–ì–û –¥–ª—è C6HP0021A: \${totalForC6HP} –∏–∑ 30 —à—Ç—É–∫\`);
    
    if (totalForC6HP >= 30) {
      console.log('üéâ –°–ò–°–¢–ï–ú–ê –î–û–õ–ñ–ù–ê –ü–û–ö–ê–ó–ê–¢–¨ –ú–û–î–ê–õ–¨–ù–û–ï –û–ö–ù–û –ó–ê–í–ï–†–®–ï–ù–ò–Ø!');
    } else {
      console.log(\`‚è≥ –ù—É–∂–Ω–æ –µ—â–µ \${30 - totalForC6HP} —à—Ç—É–∫ –¥–ª—è –∞–≤—Ç–æ–∑–∞–≤–µ—Ä—à–µ–Ω–∏—è\`);
    }
    
    console.log('\\nüè≠ –ê–∫—Ç–∏–≤–Ω—ã–µ —Å—Ç–∞–Ω–∫–∏:');
    const machines = await client.query('SELECT id, \"machineName\", \"machineType\" FROM machines LIMIT 5');
    machines.rows.forEach(machine => {
      console.log(\`  \${machine.id}: \${machine.machineName} (\${machine.machineType})\`);
    });
    
    await client.end();
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    await client.end();
  }
}

showTestData();
"

echo.
echo ===============================================
echo üéØ –ò–ù–°–¢–†–£–ö–¶–ò–Ø –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:
echo ===============================================
echo.
echo 1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ frontend: npm start
echo 2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–°–º–µ–Ω—ã" ‚Üí "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞"
echo 3. –ù–∞–π–¥–∏—Ç–µ —Å—Ç–∞–Ω–æ–∫ —Å –æ–ø–µ—Ä–∞—Ü–∏–µ–π C6HP0021A
echo 4. –î–æ–±–∞–≤—å—Ç–µ –∑–∞–ø–∏—Å–∏ —Å–º–µ–Ω —Ç–∞–∫, —á—Ç–æ–±—ã —Å—É–º–º–∞ –¥–æ—Å—Ç–∏–≥–ª–∞ 30 —à—Ç—É–∫
echo 5. –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–∫–∞–∂–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
echo.
echo üé¨ –û–∂–∏–¥–∞–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ:
echo - –ü—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ 30 —à—Ç—É–∫ –ø–æ—è–≤–∏—Ç—Å—è –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
echo - –¢—Ä–∏ –∫–Ω–æ–ø–∫–∏: –ó–ê–ö–†–´–¢–¨ / –ü–†–û–î–û–õ–ñ–ò–¢–¨ / –°–ü–õ–ê–ù–ò–†–û–í–ê–¢–¨  
echo - –ü—Ä–∏ –≤—ã–±–æ—Ä–µ "–°–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å" –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –æ–∫–Ω–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
echo.
echo ‚úÖ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!
echo.
pause
