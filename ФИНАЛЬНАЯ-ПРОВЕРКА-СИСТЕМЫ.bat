@echo off
echo ===========================================
echo –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –ê–í–¢–û–ó–ê–í–ï–†–®–ï–ù–ò–Ø –û–ü–ï–†–ê–¶–ò–ô
echo ===========================================
echo.

echo –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã...
echo.

echo 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤:
if exist "frontend\src\pages\Shifts\components\OperationCompletionModal.tsx" (
    echo ‚úÖ OperationCompletionModal.tsx - –°–û–ó–î–ê–ù
) else (
    echo ‚ùå OperationCompletionModal.tsx - –ù–ï –ù–ê–ô–î–ï–ù
)

if exist "frontend\src\pages\Shifts\components\OperationDetailModal.tsx" (
    echo ‚úÖ OperationDetailModal.tsx - –°–û–ó–î–ê–ù
) else (
    echo ‚ùå OperationDetailModal.tsx - –ù–ï –ù–ê–ô–î–ï–ù
)

if exist "frontend\src\pages\Shifts\components\ActiveMachinesMonitor.tsx" (
    echo ‚úÖ ActiveMachinesMonitor.tsx - –û–ë–ù–û–í–õ–ï–ù
) else (
    echo ‚ùå ActiveMachinesMonitor.tsx - –ù–ï –ù–ê–ô–î–ï–ù
)

if exist "frontend\src\components\PlanningModal\PlanningModal.tsx" (
    echo ‚úÖ PlanningModal.tsx - –ò–ù–¢–ï–ì–†–ò–†–û–í–ê–ù
) else (
    echo ‚ùå PlanningModal.tsx - –ù–ï –ù–ê–ô–î–ï–ù
)

echo.
echo 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ:
cd backend
call npx ts-node -e "
const { Client } = require('pg');
const client = new Client({
  connectionString: 'postgresql://postgres:magarel@localhost:5432/thewho'
});

async function finalCheck() {
  try {
    await client.connect();
    
    console.log('üìä –ê–Ω–∞–ª–∏–∑ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã:');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–º–µ–Ω—ã
    const shifts = await client.query(`
      SELECT 
        COUNT(*) as total_shifts,
        SUM(\"dayShiftQuantity\" + \"nightShiftQuantity\") as total_parts
      FROM shift_records
    `);
    
    console.log(\`  –í—Å–µ–≥–æ —Å–º–µ–Ω –≤ –ë–î: \${shifts.rows[0].total_shifts}\`);
    console.log(\`  –í—Å–µ–≥–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–æ –¥–µ—Ç–∞–ª–µ–π: \${shifts.rows[0].total_parts || 0}\`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞–Ω–∫–∏
    const machines = await client.query('SELECT COUNT(*) as count FROM machines');
    console.log(\`  –°—Ç–∞–Ω–∫–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ: \${machines.rows[0].count}\`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø–µ—Ä–∞—Ü–∏–∏
    const operations = await client.query('SELECT COUNT(*) as count FROM operations');
    console.log(\`  –û–ø–µ—Ä–∞—Ü–∏–π –≤ —Å–∏—Å—Ç–µ–º–µ: \${operations.rows[0].count}\`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–∫–∞–∑—ã
    const orders = await client.query('SELECT COUNT(*) as count FROM orders');
    console.log(\`  –ó–∞–∫–∞–∑–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ: \${orders.rows[0].count}\`);
    
    console.log('\\nüéØ –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é:');
    
    if (shifts.rows[0].total_shifts > 0) {
      console.log('  ‚úÖ –ï—Å—Ç—å –¥–∞–Ω–Ω—ã–µ —Å–º–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    } else {
      console.log('  ‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö —Å–º–µ–Ω - –¥–æ–±–∞–≤—å—Ç–µ —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å');
    }
    
    if (machines.rows[0].count > 0) {
      console.log('  ‚úÖ –ï—Å—Ç—å —Å—Ç–∞–Ω–∫–∏ –≤ —Å–∏—Å—Ç–µ–º–µ');
    } else {
      console.log('  ‚ùå –ù–µ—Ç —Å—Ç–∞–Ω–∫–æ–≤ - –¥–æ–±–∞–≤—å—Ç–µ —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å');
    }
    
    console.log('\\nüöÄ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é:');
    console.log('  1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ frontend: npm start');
    console.log('  2. –û—Ç–∫—Ä–æ–π—Ç–µ \"–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞\"');
    console.log('  3. –ù–∞–π–¥–∏—Ç–µ —Å—Ç–∞–Ω–æ–∫ —Å –æ–ø–µ—Ä–∞—Ü–∏–µ–π C6HP0021A');
    console.log('  4. –î–æ–±–∞–≤—å—Ç–µ —Å–º–µ–Ω—ã –¥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è 30 —à—Ç—É–∫');
    console.log('  5. –°–∏—Å—Ç–µ–º–∞ –ø–æ–∫–∞–∂–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');
    
    await client.end();
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', error.message);
  }
}

finalCheck();
"

echo.
echo 3. –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:
echo ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ 30 —à—Ç—É–∫
echo ‚úÖ –¢—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –¥–µ–π—Å—Ç–≤–∏–π: –ó–∞–∫—Ä—ã—Ç—å / –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å / –°–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å  
echo ‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º
echo ‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
echo ‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ (3-5 —Å–µ–∫)
echo ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
echo.

echo 4. –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:
echo ‚úÖ OperationCompletionModal - –∫—Ä–∞—Å–∏–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
echo ‚úÖ OperationDetailModal - –¥–µ—Ç–∞–ª–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏
echo ‚úÖ ActiveMachinesMonitor - –æ–±–Ω–æ–≤–ª–µ–Ω —Å –∞–≤—Ç–æ–ø—Ä–æ–≤–µ—Ä–∫–æ–π
echo ‚úÖ PlanningModal - –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω –∏–∑ —Å–µ–∫—Ü–∏–∏ "–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ"
echo.

echo ===========================================
echo üéâ –°–ò–°–¢–ï–ú–ê –ê–í–¢–û–ó–ê–í–ï–†–®–ï–ù–ò–Ø –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï!
echo ===========================================
echo.
echo –î–ª—è –∑–∞–ø—É—Å–∫–∞:
echo 1. Backend: cd backend ^&^& npm run start:dev
echo 2. Frontend: cd frontend ^&^& npm start
echo 3. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000
echo 4. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞"
echo.
pause
